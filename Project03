{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Project 3 - due Friday, 12/9 at 12pm\n",
    "### Group members\n",
    "* Qinhui Xu\n",
    "* Ying Zhang\n",
    "* Zezhi Zhou\n",
    "* Zian Wang\n",
    "\n",
    "Work in groups of four people per project.\n",
    "Select a dataset of at least 250,000 records, preferably at the level of individual transactions. Acquire the\n",
    "data, survey it, wrangle it into a suitable format, and analyze it. Present your work in a brief (8-10 minute)\n",
    "talk in class on Tuesday, 12/6, and write up your process and results in a reproducible notebook.\n",
    "You may use any of the methods we studied in class: Unix command line tools, relational databases and\n",
    "dimensional models with SQLite or PostgreSQL, or Spark. The datanotebook.org server will remain available\n",
    "until the end of the semester and may be used for the project.\n",
    "Attestation: All project team members should contribute meaningfully to the final results. Please attest to\n",
    "your individual contributions and that each member contributed substantially to the project in your final\n",
    "writeup.\n",
    "Deadline: Friday, 12/9, 12pm. Submit your presentation (PDF export), your notebook, and any additionally\n",
    "necessary files like scripts or images together in one zip file. Only one team member should submit on behalf\n",
    "of all members. All team members should post their projects to GitHub for reviews after the deadline has\n",
    "passed.\n",
    "\n",
    "\n",
    "## Setup - select and obtain data\n",
    "\n",
    "The US City Open Data Census has a variety of [transactional data from all over the country](http://us-city.census.okfn.org/).  Select one topic and one city from this Census, download the data, and explain your reason for this choice before proceeding.  Provide a link to the web page for the data set you've chosen.\n",
    "\n",
    "I strongly encourage you to select a dataset from among the following topics:  Crime, Property Assessment, Campaign Finance Contributions, Service Requests (311), and Web Analytics.\n",
    "\n",
    "By *transactional* data I mean records at the grain of one event per business process.  In the case of Service Requests (311), for example, that would require data at the level of each individual report of a service request.  If this isn't clear, think about the bike trip data - each individual ride was included - and look for data at that level of event/process specificity.  Avoid data like the Connecticut boating data, which was summarized by year, not individual transactions.\n",
    "\n",
    "Please aim for a dataset of at least 10,000 individual records, but less than 250,000 records.  A little more or a little less is okay, but try to stay within these limits."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 1 - Selection (30 points)\n",
    "Identify and describe your dataset, its source, and what appeals to you about it. Acquire the data and\n",
    "perform an initial exploration to determine which themes you wish to explore. Describe the questions you\n",
    "want to be able to answer with the data, any concerns you have about the data, and any challenges you\n",
    "expect to have to overcome."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Download the Request Service data from website. **\n",
    "\n",
    "The data is about the 311 Service Request in Austin. There are 388387 transactions in total.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--2016-12-03 05:40:20--  https://data.austintexas.gov/api/views/i26j-ai4z/rows.csv?accessType=DOWNLOAD\n",
      "Resolving data.austintexas.gov (data.austintexas.gov)... 52.206.68.26\n",
      "Connecting to data.austintexas.gov (data.austintexas.gov)|52.206.68.26|:443... connected.\n",
      "HTTP request sent, awaiting response... 200 OK\n",
      "Length: unspecified [text/csv]\n",
      "Saving to: ‘rows.csv?accessType=DOWNLOAD’\n",
      "\n",
      "rows.csv?accessType     [    <=>               ] 125.97M  3.45MB/s   in 38s    \n",
      "\n",
      "Last-modified header invalid -- time-stamp ignored.\n",
      "2016-12-03 05:40:58 (3.34 MB/s) - ‘rows.csv?accessType=DOWNLOAD’ saved [132093850]\n",
      "\n"
     ]
    }
   ],
   "source": [
    "!wget \"https://data.austintexas.gov/api/views/i26j-ai4z/rows.csv?accessType=DOWNLOAD\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Rename the csv file. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "!mv rows.csv?accessType=DOWNLOAD ServiceRequest.csv"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Explore the Data. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  388407 ServiceRequest.csv\r\n"
     ]
    }
   ],
   "source": [
    "!wc -l ServiceRequest.csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  1: Service Request (SR) Number\r\n",
      "  2: SR Type Code\r\n",
      "  3: SR Description\r\n",
      "  4: Owning Department\r\n",
      "  5: Method Received\r\n",
      "  6: SR Status\r\n",
      "  7: Status Change Date\r\n",
      "  8: Created Date\r\n",
      "  9: Last Update Date\r\n",
      " 10: Close Date\r\n",
      " 11: SR Location\r\n",
      " 12: Street Number\r\n",
      " 13: Street Name\r\n",
      " 14: City\r\n",
      " 15: Zip Code\r\n",
      " 16: County\r\n",
      " 17: State Plane X Coordinate\r\n",
      " 18: State Plane Y Coordinate\r\n",
      " 19: Latitude Coordinate\r\n",
      " 20: Longitude Coordinate\r\n",
      " 21: (Latitude.Longitude)\r\n",
      " 22: Council District\r\n",
      " 23: Map Page\r\n",
      " 24: Map Tile\r\n"
     ]
    }
   ],
   "source": [
    "!csvcut -n ServiceRequest.csv"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Let's have a look about the first 5 rows of the data to get an overview. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "|------------------------------+--------------+------------------------------+--------------------|\n",
      "|  Service Request (SR) Number | SR Type Code | SR Description               | Owning Department  |\n",
      "|------------------------------+--------------+------------------------------+--------------------|\n",
      "|  16-00107769                 | TRASIGMA     | Traffic Signal - Maintenance | Transportation     |\n",
      "|  16-00108244                 | TRASIGMA     | Traffic Signal - Maintenance | Transportation     |\n",
      "|  16-00108269                 | TRASIGMA     | Traffic Signal - Maintenance | Transportation     |\n",
      "|  16-00108062                 | TRASIGMA     | Traffic Signal - Maintenance | Transportation     |\n",
      "|------------------------------+--------------+------------------------------+--------------------|\n",
      "|------------------+--------------------+------------------------+-------------------------|\n",
      "|  Method Received | SR Status          | Status Change Date     | Created Date            |\n",
      "|------------------+--------------------+------------------------+-------------------------|\n",
      "|  Phone           | Duplicate (closed) | 05/06/2016 12:11:57 PM | 05/06/2016 12:01:46 PM  |\n",
      "|  Phone           | Duplicate (closed) | 05/06/2016 07:51:27 PM | 05/06/2016 07:51:27 PM  |\n",
      "|  Phone           | Duplicate (closed) | 05/06/2016 08:22:56 PM | 05/06/2016 08:22:56 PM  |\n",
      "|  Phone           | Duplicate (closed) | 05/10/2016 04:56:52 PM | 05/06/2016 05:03:45 PM  |\n",
      "|------------------+--------------------+------------------------+-------------------------|\n",
      "|-------------------------+------------------------+--------------------------------------------------+----------------|\n",
      "|  Last Update Date       | Close Date             | SR Location                                      | Street Number  |\n",
      "|-------------------------+------------------------+--------------------------------------------------+----------------|\n",
      "|  05/06/2016 12:11:57 PM | 05/06/2016 12:11:57 PM | WINDSOR RD & EXPOSITION BLVD, AUSTIN, TX 78703   |                |\n",
      "|  05/06/2016 07:51:27 PM | 05/06/2016 07:51:27 PM | 6001 MANCHACA RD, AUSTIN, TX 78745               | 6001           |\n",
      "|  05/06/2016 08:22:56 PM | 05/06/2016 08:22:56 PM | 6001 MANCHACA RD, AUSTIN, TX 78745               | 6001           |\n",
      "|  05/10/2016 04:56:52 PM | 05/10/2016 04:56:52 PM | 8401 N CAPITAL OF TEXAS HWY NB, AUSTIN, TX 78759 | 8401           |\n",
      "|-------------------------+------------------------+--------------------------------------------------+----------------|\n",
      "|-------------------------------+--------+----------+---------|\n",
      "|  Street Name                  | City   | Zip Code | County  |\n",
      "|-------------------------------+--------+----------+---------|\n",
      "|  WINDSOR RD & EXPOSITION BLVD | AUSTIN | 78703    | TRAVIS  |\n",
      "|  MANCHACA                     | AUSTIN | 78745    | TRAVIS  |\n",
      "|  MANCHACA                     | AUSTIN | 78745    | TRAVIS  |\n",
      "|  CAPITAL OF TEXAS             | AUSTIN | 78759    | TRAVIS  |\n",
      "|-------------------------------+--------+----------+---------|\n",
      "|---------------------------+--------------------------+----------------------|\n",
      "|  State Plane X Coordinate | State Plane Y Coordinate | Latitude Coordinate  |\n",
      "|---------------------------+--------------------------+----------------------|\n",
      "|  3106038.49745799         | 10080978.0030157         | 30.29669887          |\n",
      "|  3096240.5                | 10050194                 | 30.2126949           |\n",
      "|  3096240.5                | 10050194                 | 30.2126949           |\n",
      "|  3105863.35797435         | 10113092.5341337         | 30.38498865          |\n",
      "|---------------------------+--------------------------+----------------------|\n",
      "|-----------------------+-----------------------------+-------------------|\n",
      "|  Longitude Coordinate | (Latitude.Longitude)        | Council District  |\n",
      "|-----------------------+-----------------------------+-------------------|\n",
      "|  -97.76826374         | (30.29669887, -97.76826374) | 10                |\n",
      "|  -97.8015215          | (30.2126949, -97.8015215)   | 5                 |\n",
      "|  -97.8015215          | (30.2126949, -97.8015215)   | 5                 |\n",
      "|  -97.76647071         | (30.38498865, -97.76647071) | 10                |\n",
      "|-----------------------+-----------------------------+-------------------|\n",
      "|-----------+-----------|\n",
      "|  Map Page | Map Tile  |\n",
      "|-----------+-----------|\n",
      "|  584C     | MH24      |\n",
      "|  643M     | MF17      |\n",
      "|  643M     | MF17      |\n",
      "|  494L     | MH32      |\n",
      "|-----------+-----------|\n"
     ]
    }
   ],
   "source": [
    "!head -5 ServiceRequest.csv|csvcut -c1,2,3,4| csvlook\n",
    "!head -5 ServiceRequest.csv|csvcut -c5,6,7,8| csvlook\n",
    "!head -5 ServiceRequest.csv|csvcut -c9,10,11,12| csvlook\n",
    "!head -5 ServiceRequest.csv|csvcut -c13,14,15,16| csvlook\n",
    "!head -5 ServiceRequest.csv|csvcut -c17,18,19| csvlook\n",
    "!head -5 ServiceRequest.csv|csvcut -c20,21,22| csvlook\n",
    "!head -5 ServiceRequest.csv|csvcut -c23,24| csvlook"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Chcek the basic statistic information about the file. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  1. Service Request (SR) Number\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 384169\n",
      "\tMax length: 11\n",
      "  2. SR Type Code\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 120\n",
      "\t5 most frequent values:\n",
      "\t\tCODECOMP:\t63837\n",
      "\t\tACLONAG:\t26670\n",
      "\t\tTRASIGMA:\t24014\n",
      "\t\tACINFORM:\t17708\n",
      "\t\tSWSRECYC:\t17452\n",
      "\tMax length: 8\n",
      "  3. SR Description\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 133\n",
      "\t5 most frequent values:\n",
      "\t\tAustin Code - Request Code Officer:\t63837\n",
      "\t\tLoose Dog:\t26670\n",
      "\t\tTraffic Signal - Maintenance:\t24014\n",
      "\t\tAnimal Control - Assistance Request:\t17708\n",
      "\t\tARR Missed Recycling:\t17452\n",
      "\tMax length: 51\n",
      "  4. Owning Department\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 15\n",
      "\t5 most frequent values:\n",
      "\t\tAnimal Services Office:\t81497\n",
      "\t\tTransportation:\t67553\n",
      "\t\tAustin Code Department:\t66592\n",
      "\t\tAustin Resource Recovery:\t53938\n",
      "\t\tPublic Works:\t36809\n",
      "\tMax length: 44\n",
      "  5. Method Received\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 18\n",
      "\t5 most frequent values:\n",
      "\t\tPhone:\t331680\n",
      "\t\tSpot311 Interface:\t22643\n",
      "\t\tWeb:\t20677\n",
      "\t\tMass Entry:\t6557\n",
      "\t\tField Request:\t2083\n",
      "\tMax length: 18\n",
      "  6. SR Status\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 14\n",
      "\t5 most frequent values:\n",
      "\t\tClosed:\t346574\n",
      "\t\tDuplicate (closed):\t12599\n",
      "\t\tOpen:\t12388\n",
      "\t\tResolved:\t6975\n",
      "\t\tNew:\t3419\n",
      "\tMax length: 30\n",
      "  7. Status Change Date\n",
      "\t<class 'datetime.datetime'>\n",
      "\tNulls: True\n",
      "\tMin: 2013-12-31 00:00:00\n",
      "\tMax: 2016-12-02 18:26:50\n",
      "\tUnique values: 354835\n",
      "\t5 most frequent values:\n",
      "\t\t2016-04-18 16:33:33:\t348\n",
      "\t\t2016-04-22 15:01:37:\t243\n",
      "\t\t2016-04-25 13:27:06:\t235\n",
      "\t\t2016-04-22 16:01:41:\t193\n",
      "\t\t2016-04-25 15:05:21:\t165\n",
      "  8. Created Date\n",
      "\t<class 'datetime.datetime'>\n",
      "\tNulls: True\n",
      "\tMin: 2013-12-31 00:00:00\n",
      "\tMax: 2016-12-02 18:26:50\n",
      "\tUnique values: 375297\n",
      "\t5 most frequent values:\n",
      "\t\t2013-12-31 00:00:00:\t45\n",
      "\t\t2014-04-01 00:00:00:\t41\n",
      "\t\t2014-01-03 00:00:00:\t36\n",
      "\t\t2014-03-03 00:00:00:\t33\n",
      "\t\t2014-06-02 00:00:00:\t31\n",
      "  9. Last Update Date\n",
      "\t<class 'datetime.datetime'>\n",
      "\tNulls: True\n",
      "\tMin: 2014-01-03 00:04:00\n",
      "\tMax: 2016-12-02 18:26:51\n",
      "\tUnique values: 362353\n",
      "\t5 most frequent values:\n",
      "\t\t2015-01-20 23:01:56:\t663\n",
      "\t\t2016-04-18 16:33:33:\t320\n",
      "\t\t2016-04-22 16:01:41:\t193\n",
      "\t\t2016-04-22 15:01:37:\t170\n",
      "\t\t2016-04-25 13:27:06:\t162\n",
      " 10. Close Date\n",
      "\t<class 'datetime.datetime'>\n",
      "\tNulls: True\n",
      "\tMin: 2013-12-31 00:00:00\n",
      "\tMax: 2016-12-02 18:08:42\n",
      "\tUnique values: 338170\n",
      "\t5 most frequent values:\n",
      "\t\t2016-04-18 16:33:33:\t348\n",
      "\t\t2016-04-22 15:01:37:\t243\n",
      "\t\t2016-04-25 13:27:06:\t235\n",
      "\t\t2016-04-22 16:01:41:\t193\n",
      "\t\t2016-04-25 15:05:21:\t165\n",
      " 11. SR Location\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 191934\n",
      "\t5 most frequent values:\n",
      "\t\t1520 RUTHERFORD LN, AUSTIN, TX:\t721\n",
      "\t\t6711 BURNET LN, AUSTIN, TX:\t653\n",
      "\t\t1520 RUTHERFORD LN, AUSTIN, TX 78754:\t488\n",
      "\t\t2100 BARTON SPRINGS RD, AUSTIN, TX 78746:\t298\n",
      "\t\t2100 BARTON SPRINGS RD, AUSTIN, TX:\t257\n",
      "\tMax length: 151\n",
      " 12. Street Number\n",
      "\t<class 'int'>\n",
      "\tNulls: True\n",
      "\tMin: 0\n",
      "\tMax: 28828\n",
      "\tSum: 1489626801\n",
      "\tMean: 4855.525933048665\n",
      "\tMedian: 3952.5\n",
      "\tStandard Deviation: 3853.6270148140097\n",
      "\tUnique values: 10033\n",
      "\t5 most frequent values:\n",
      "\t\t2100:\t1456\n",
      "\t\t1100:\t1421\n",
      "\t\t1520:\t1310\n",
      "\t\t1200:\t1244\n",
      "\t\t1500:\t1109\n",
      " 13. Street Name\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 28469\n",
      "\t5 most frequent values:\n",
      "\t\tLAMAR:\t4615\n",
      "\t\tCONGRESS:\t2277\n",
      "\t\tBURNET:\t2136\n",
      "\t\t6TH:\t2008\n",
      "\t\t35:\t2003\n",
      "\tMax length: 86\n",
      " 14. City\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 82\n",
      "\t5 most frequent values:\n",
      "\t\tAUSTIN:\t371530\n",
      "\t\tPFLUGERVILLE:\t1558\n",
      "\t\tAUSTIN 5 ETJ:\t1171\n",
      "\t\tDEL VALLE:\t1107\n",
      "\t\tMANOR:\t838\n",
      "\tMax length: 16\n",
      " 15. Zip Code\n",
      "\t<class 'int'>\n",
      "\tNulls: True\n",
      "\tMin: 77346\n",
      "\tMax: 79739\n",
      "\tSum: 29967464283\n",
      "\tMean: 78730.39266854773\n",
      "\tMedian: 78741.0\n",
      "\tStandard Deviation: 26.85040619545242\n",
      "\tUnique values: 69\n",
      "\t5 most frequent values:\n",
      "\t\t78745:\t26776\n",
      "\t\t78704:\t25353\n",
      "\t\t78702:\t21568\n",
      "\t\t78744:\t18902\n",
      "\t\t78723:\t18739\n",
      " 16. County\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 6\n",
      "\t5 most frequent values:\n",
      "\t\tTRAVIS:\t367539\n",
      "\t\tWILLIAMSON:\t11455\n",
      "\t\tHAYS:\t84\n",
      "\t\tBASTROP:\t17\n",
      "\t\tHARRIS:\t1\n",
      "\tMax length: 10\n",
      " 17. State Plane X Coordinate\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 179962\n",
      "\t5 most frequent values:\n",
      "\t\t3132716.37048952:\t694\n",
      "\t\t3115527.46532971:\t612\n",
      "\t\t3133220.45999999:\t462\n",
      "\t\t0:\t371\n",
      "\t\t3106393.87:\t296\n",
      "\tMax length: 16\n",
      " 18. State Plane Y Coordinate\n",
      "\t<class 'float'>\n",
      "\tNulls: True\n",
      "\tMin: 0.0\n",
      "\tMax: 100000000000.0\n",
      "\tSum: 3936309277729.098\n",
      "\tMean: 10332008.540374868\n",
      "\tMedian: 10075829.20839725\n",
      "\tStandard Deviation: 161996207.55599806\n",
      "\tUnique values: 173353\n",
      "\t5 most frequent values:\n",
      "\t\t10096289.4997731:\t696\n",
      "\t\t10097975.9453424:\t617\n",
      "\t\t10096590.77:\t498\n",
      "\t\t0.0:\t371\n",
      "\t\t10070460.02:\t296\n",
      " 19. Latitude Coordinate\n",
      "\t<class 'float'>\n",
      "\tNulls: True\n",
      "\tMin: 3.442386682\n",
      "\tMax: 30.95534\n",
      "\tSum: 11531175.4116647\n",
      "\tMean: 30.264599045869158\n",
      "\tMedian: 30.28151984\n",
      "\tStandard Deviation: 0.8389069244960387\n",
      "\tUnique values: 162239\n",
      "\t5 most frequent values:\n",
      "\t\t30.33706826:\t752\n",
      "\t\t30.34281858:\t653\n",
      "\t\t30.33786336:\t500\n",
      "\t\t3.442386682:\t369\n",
      "\t\t30.26776386:\t296\n",
      " 20. Longitude Coordinate\n",
      "\t<class 'float'>\n",
      "\tNulls: True\n",
      "\tMin: -105.9831947\n",
      "\tMax: -97.38190654\n",
      "\tSum: -37244821.37259513\n",
      "\tMean: -97.75235785905728\n",
      "\tMedian: -97.741152895\n",
      "\tStandard Deviation: 0.2636390603807452\n",
      "\tUnique values: 162597\n",
      "\t5 most frequent values:\n",
      "\t\t-97.68260018:\t752\n",
      "\t\t-97.73694818:\t653\n",
      "\t\t-97.68097994:\t499\n",
      "\t\t-105.9831947:\t369\n",
      "\t\t-97.76790653:\t296\n",
      " 21. (Latitude.Longitude)\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 165841\n",
      "\t5 most frequent values:\n",
      "\t\t(30.33706826, -97.68260018):\t752\n",
      "\t\t(30.34281858, -97.73694818):\t653\n",
      "\t\t(30.33786336, -97.68097994):\t499\n",
      "\t\t(3.442386682, -105.9831947):\t369\n",
      "\t\t(30.26776386, -97.76790653):\t296\n",
      "\tMax length: 37\n",
      " 22. Council District\n",
      "\t<class 'int'>\n",
      "\tNulls: True\n",
      "\tMin: 1\n",
      "\tMax: 10\n",
      "\tSum: 1962706\n",
      "\tMean: 5.414555556475129\n",
      "\tMedian: 5\n",
      "\tStandard Deviation: 3.019962038675773\n",
      "\tUnique values: 10\n",
      "\t5 most frequent values:\n",
      "\t\t9:\t55637\n",
      "\t\t1:\t47118\n",
      "\t\t3:\t41362\n",
      "\t\t5:\t37261\n",
      "\t\t7:\t35926\n",
      " 23. Map Page\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 2725\n",
      "\t5 most frequent values:\n",
      "\t\t585W:\t3653\n",
      "\t\t585S:\t3096\n",
      "\t\t585X:\t2480\n",
      "\t\t615B:\t2395\n",
      "\t\t585E:\t2295\n",
      "\tMax length: 5\n",
      " 24. Map Tile\n",
      "\t<class 'str'>\n",
      "\tNulls: True\n",
      "\tUnique values: 870\n",
      "\t5 most frequent values:\n",
      "\t\tMJ22:\t10693\n",
      "\t\tMK21:\t5980\n",
      "\t\tMJ24:\t5643\n",
      "\t\tMJ21:\t4948\n",
      "\t\tMK22:\t4700\n",
      "\tMax length: 4\n",
      "\n",
      "Row count: 388403\n"
     ]
    }
   ],
   "source": [
    "!csvstat ServiceRequest.csv"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Check if there is null value **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/apple1/anaconda/lib/python3.5/site-packages/IPython/core/interactiveshell.py:2723: DtypeWarning: Columns (16) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  interactivity=interactivity, compiler=compiler, result=result)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Service Request (SR) Number</th>\n",
       "      <th>SR Type Code</th>\n",
       "      <th>SR Description</th>\n",
       "      <th>Owning Department</th>\n",
       "      <th>Method Received</th>\n",
       "      <th>SR Status</th>\n",
       "      <th>Status Change Date</th>\n",
       "      <th>Created Date</th>\n",
       "      <th>Last Update Date</th>\n",
       "      <th>Close Date</th>\n",
       "      <th>...</th>\n",
       "      <th>Zip Code</th>\n",
       "      <th>County</th>\n",
       "      <th>State Plane X Coordinate</th>\n",
       "      <th>State Plane Y Coordinate</th>\n",
       "      <th>Latitude Coordinate</th>\n",
       "      <th>Longitude Coordinate</th>\n",
       "      <th>(Latitude.Longitude)</th>\n",
       "      <th>Council District</th>\n",
       "      <th>Map Page</th>\n",
       "      <th>Map Tile</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16-00107769</td>\n",
       "      <td>TRASIGMA</td>\n",
       "      <td>Traffic Signal - Maintenance</td>\n",
       "      <td>Transportation</td>\n",
       "      <td>Phone</td>\n",
       "      <td>Duplicate (closed)</td>\n",
       "      <td>05/06/2016 12:11:57 PM</td>\n",
       "      <td>05/06/2016 12:01:46 PM</td>\n",
       "      <td>05/06/2016 12:11:57 PM</td>\n",
       "      <td>05/06/2016 12:11:57 PM</td>\n",
       "      <td>...</td>\n",
       "      <td>78703.0</td>\n",
       "      <td>TRAVIS</td>\n",
       "      <td>3.10604e+06</td>\n",
       "      <td>1.008098e+07</td>\n",
       "      <td>30.296699</td>\n",
       "      <td>-97.768264</td>\n",
       "      <td>(30.29669887, -97.76826374)</td>\n",
       "      <td>10.0</td>\n",
       "      <td>584C</td>\n",
       "      <td>MH24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>16-00108244</td>\n",
       "      <td>TRASIGMA</td>\n",
       "      <td>Traffic Signal - Maintenance</td>\n",
       "      <td>Transportation</td>\n",
       "      <td>Phone</td>\n",
       "      <td>Duplicate (closed)</td>\n",
       "      <td>05/06/2016 07:51:27 PM</td>\n",
       "      <td>05/06/2016 07:51:27 PM</td>\n",
       "      <td>05/06/2016 07:51:27 PM</td>\n",
       "      <td>05/06/2016 07:51:27 PM</td>\n",
       "      <td>...</td>\n",
       "      <td>78745.0</td>\n",
       "      <td>TRAVIS</td>\n",
       "      <td>3.09624e+06</td>\n",
       "      <td>1.005019e+07</td>\n",
       "      <td>30.212695</td>\n",
       "      <td>-97.801521</td>\n",
       "      <td>(30.2126949, -97.8015215)</td>\n",
       "      <td>5.0</td>\n",
       "      <td>643M</td>\n",
       "      <td>MF17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>16-00108269</td>\n",
       "      <td>TRASIGMA</td>\n",
       "      <td>Traffic Signal - Maintenance</td>\n",
       "      <td>Transportation</td>\n",
       "      <td>Phone</td>\n",
       "      <td>Duplicate (closed)</td>\n",
       "      <td>05/06/2016 08:22:56 PM</td>\n",
       "      <td>05/06/2016 08:22:56 PM</td>\n",
       "      <td>05/06/2016 08:22:56 PM</td>\n",
       "      <td>05/06/2016 08:22:56 PM</td>\n",
       "      <td>...</td>\n",
       "      <td>78745.0</td>\n",
       "      <td>TRAVIS</td>\n",
       "      <td>3.09624e+06</td>\n",
       "      <td>1.005019e+07</td>\n",
       "      <td>30.212695</td>\n",
       "      <td>-97.801521</td>\n",
       "      <td>(30.2126949, -97.8015215)</td>\n",
       "      <td>5.0</td>\n",
       "      <td>643M</td>\n",
       "      <td>MF17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>16-00108062</td>\n",
       "      <td>TRASIGMA</td>\n",
       "      <td>Traffic Signal - Maintenance</td>\n",
       "      <td>Transportation</td>\n",
       "      <td>Phone</td>\n",
       "      <td>Duplicate (closed)</td>\n",
       "      <td>05/10/2016 04:56:52 PM</td>\n",
       "      <td>05/06/2016 05:03:45 PM</td>\n",
       "      <td>05/10/2016 04:56:52 PM</td>\n",
       "      <td>05/10/2016 04:56:52 PM</td>\n",
       "      <td>...</td>\n",
       "      <td>78759.0</td>\n",
       "      <td>TRAVIS</td>\n",
       "      <td>3.10586e+06</td>\n",
       "      <td>1.011309e+07</td>\n",
       "      <td>30.384989</td>\n",
       "      <td>-97.766471</td>\n",
       "      <td>(30.38498865, -97.76647071)</td>\n",
       "      <td>10.0</td>\n",
       "      <td>494L</td>\n",
       "      <td>MH32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>16-00107654</td>\n",
       "      <td>STREETL2</td>\n",
       "      <td>Street Light Issue- Address</td>\n",
       "      <td>Austin Energy Department</td>\n",
       "      <td>Phone</td>\n",
       "      <td>Closed</td>\n",
       "      <td>05/10/2016 06:58:01 AM</td>\n",
       "      <td>05/06/2016 10:28:16 AM</td>\n",
       "      <td>05/10/2016 06:58:01 AM</td>\n",
       "      <td>05/10/2016 06:58:01 AM</td>\n",
       "      <td>...</td>\n",
       "      <td>78703.0</td>\n",
       "      <td>TRAVIS</td>\n",
       "      <td>3.11149e+06</td>\n",
       "      <td>1.007070e+07</td>\n",
       "      <td>30.268090</td>\n",
       "      <td>-97.751739</td>\n",
       "      <td>(30.26808964, -97.75173887)</td>\n",
       "      <td>9.0</td>\n",
       "      <td>584V</td>\n",
       "      <td>MH22</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Service Request (SR) Number SR Type Code                SR Description  \\\n",
       "0                 16-00107769     TRASIGMA  Traffic Signal - Maintenance   \n",
       "1                 16-00108244     TRASIGMA  Traffic Signal - Maintenance   \n",
       "2                 16-00108269     TRASIGMA  Traffic Signal - Maintenance   \n",
       "3                 16-00108062     TRASIGMA  Traffic Signal - Maintenance   \n",
       "4                 16-00107654     STREETL2   Street Light Issue- Address   \n",
       "\n",
       "          Owning Department Method Received           SR Status  \\\n",
       "0            Transportation           Phone  Duplicate (closed)   \n",
       "1            Transportation           Phone  Duplicate (closed)   \n",
       "2            Transportation           Phone  Duplicate (closed)   \n",
       "3            Transportation           Phone  Duplicate (closed)   \n",
       "4  Austin Energy Department           Phone              Closed   \n",
       "\n",
       "       Status Change Date            Created Date        Last Update Date  \\\n",
       "0  05/06/2016 12:11:57 PM  05/06/2016 12:01:46 PM  05/06/2016 12:11:57 PM   \n",
       "1  05/06/2016 07:51:27 PM  05/06/2016 07:51:27 PM  05/06/2016 07:51:27 PM   \n",
       "2  05/06/2016 08:22:56 PM  05/06/2016 08:22:56 PM  05/06/2016 08:22:56 PM   \n",
       "3  05/10/2016 04:56:52 PM  05/06/2016 05:03:45 PM  05/10/2016 04:56:52 PM   \n",
       "4  05/10/2016 06:58:01 AM  05/06/2016 10:28:16 AM  05/10/2016 06:58:01 AM   \n",
       "\n",
       "               Close Date    ...    Zip Code  County State Plane X Coordinate  \\\n",
       "0  05/06/2016 12:11:57 PM    ...     78703.0  TRAVIS              3.10604e+06   \n",
       "1  05/06/2016 07:51:27 PM    ...     78745.0  TRAVIS              3.09624e+06   \n",
       "2  05/06/2016 08:22:56 PM    ...     78745.0  TRAVIS              3.09624e+06   \n",
       "3  05/10/2016 04:56:52 PM    ...     78759.0  TRAVIS              3.10586e+06   \n",
       "4  05/10/2016 06:58:01 AM    ...     78703.0  TRAVIS              3.11149e+06   \n",
       "\n",
       "  State Plane Y Coordinate  Latitude Coordinate Longitude Coordinate  \\\n",
       "0             1.008098e+07            30.296699           -97.768264   \n",
       "1             1.005019e+07            30.212695           -97.801521   \n",
       "2             1.005019e+07            30.212695           -97.801521   \n",
       "3             1.011309e+07            30.384989           -97.766471   \n",
       "4             1.007070e+07            30.268090           -97.751739   \n",
       "\n",
       "          (Latitude.Longitude)  Council District  Map Page  Map Tile  \n",
       "0  (30.29669887, -97.76826374)              10.0      584C      MH24  \n",
       "1    (30.2126949, -97.8015215)               5.0      643M      MF17  \n",
       "2    (30.2126949, -97.8015215)               5.0      643M      MF17  \n",
       "3  (30.38498865, -97.76647071)              10.0      494L      MH32  \n",
       "4  (30.26808964, -97.75173887)               9.0      584V      MH22  \n",
       "\n",
       "[5 rows x 24 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "SRdf = pd.read_csv(\"ServiceRequest.csv\")\n",
    "SRdf.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Service Request (SR) Number     4234\n",
       "SR Type Code                    4235\n",
       "SR Description                  4235\n",
       "Owning Department               4235\n",
       "Method Received                 4235\n",
       "SR Status                       4235\n",
       "Status Change Date              4235\n",
       "Created Date                    4235\n",
       "Last Update Date                4235\n",
       "Close Date                     21566\n",
       "SR Location                     7317\n",
       "Street Number                  81613\n",
       "Street Name                     7396\n",
       "City                            7846\n",
       "Zip Code                        7769\n",
       "County                          9306\n",
       "State Plane X Coordinate        7378\n",
       "State Plane Y Coordinate        7421\n",
       "Latitude Coordinate             7391\n",
       "Longitude Coordinate            7391\n",
       "(Latitude.Longitude)            7391\n",
       "Council District               25916\n",
       "Map Page                        7799\n",
       "Map Tile                        8567\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SRdf.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "dfNull= _\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "NullNum = pd.DataFrame(dfNull,columns=['Number'])\n",
    "NullNum.reset_index(level=0,inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x112a546a0>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x112a5b358>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "NullNum.plot.barh(x='index',y='Number',color='pink')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*** So, we can see that there are NULL values in all the columns. We will deal with NULL values in our next setp.***"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since the data is about Service Request, the first thing we want to know is:\n",
    "    \n",
    "   *  Which department received most Service Requests?\n",
    "\n",
    "We will use Spart to deal with such a big amount of data and to answer this question."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Use Spark to Explore Data **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from pyspark.sql.types import *\n",
    "import pyspark.sql.functions as F"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "page_views_schema = StructType(\n",
    "                    [StructField(\"SRID\", StringType(), True),\n",
    "                    StructField(\"SRTypeCode\", StringType(), True),\n",
    "                    StructField(\"SRdes\", StringType(), True),\n",
    "                    StructField(\"OwningDepart\", StringType(), True),\n",
    "                    StructField(\"MethodReceived\", StringType(), True),\n",
    "                    StructField(\"SRStatus\", StringType(), True),\n",
    "                    StructField(\"ChangeDate\", StringType(), True),\n",
    "                    StructField(\"CreateDate\", StringType(), True),\n",
    "                    StructField(\"LastUpdateDate\", StringType(), True),\n",
    "                    StructField(\"CloseDate\", StringType(), True),\n",
    "                    StructField(\"SRLoc\", StringType(), True),\n",
    "                    StructField(\"StreetNum\", StringType(), True),\n",
    "                    StructField(\"StreetName\", StringType(), True),\n",
    "                    StructField(\"City\", StringType(), True),\n",
    "                    StructField(\"ZipCode\", StringType(), True),\n",
    "                    StructField(\"County\", StringType(), True),\n",
    "                    StructField(\"StatePlaneX\", StringType(), True),\n",
    "                    StructField(\"StatePlaneY\", StringType(), True),\n",
    "                    StructField(\"Latitude\", StringType(), True),\n",
    "                    StructField(\"Longitude\", StringType(), True),\n",
    "                    StructField(\"Geocode\", StringType(), True),\n",
    "                    StructField(\"Council\", StringType(), True),\n",
    "                    StructField(\"MapPage\", StringType(), True),\n",
    "                    StructField(\"MapTitle\", StringType(), True)]\n",
    "                    )\n",
    "#Data is read from Google Cloud Storage, a distributed filesystem like HDFS stored externally to the cluster\n",
    "#If you wanna use your own HDFS, just prefix the file path with the absolute path 'hdfs:' or \n",
    "#with the relative path if HDFS is your cluster default filesystem\n",
    "page_views_df = spark.read.schema(page_views_schema).options(header='true', inferschema='false', nullValue='\\\\N') \\\n",
    "                .csv(\"ServiceRequest.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+-----------+----------+--------------------+--------------------+-----------------+------------------+--------------------+--------------------+--------------------+--------------------+--------------------+---------+--------------------+------+-------+------+----------------+----------------+-----------+------------+--------------------+-------+-------+--------+\n",
      "|       SRID|SRTypeCode|               SRdes|        OwningDepart|   MethodReceived|          SRStatus|          ChangeDate|          CreateDate|      LastUpdateDate|           CloseDate|               SRLoc|StreetNum|          StreetName|  City|ZipCode|County|     StatePlaneX|     StatePlaneY|   Latitude|   Longitude|             Geocode|Council|MapPage|MapTitle|\n",
      "+-----------+----------+--------------------+--------------------+-----------------+------------------+--------------------+--------------------+--------------------+--------------------+--------------------+---------+--------------------+------+-------+------+----------------+----------------+-----------+------------+--------------------+-------+-------+--------+\n",
      "|16-00107769|  TRASIGMA|Traffic Signal - ...|      Transportation|            Phone|Duplicate (closed)|05/06/2016 12:11:...|05/06/2016 12:01:...|05/06/2016 12:11:...|05/06/2016 12:11:...|WINDSOR RD & EXPO...|     null|WINDSOR RD & EXPO...|AUSTIN|  78703|TRAVIS|3106038.49745799|10080978.0030157|30.29669887|-97.76826374|(30.29669887, -97...|     10|   584C|    MH24|\n",
      "|16-00108244|  TRASIGMA|Traffic Signal - ...|      Transportation|            Phone|Duplicate (closed)|05/06/2016 07:51:...|05/06/2016 07:51:...|05/06/2016 07:51:...|05/06/2016 07:51:...|6001 MANCHACA RD,...|     6001|            MANCHACA|AUSTIN|  78745|TRAVIS|       3096240.5|        10050194| 30.2126949| -97.8015215|(30.2126949, -97....|      5|   643M|    MF17|\n",
      "|16-00108269|  TRASIGMA|Traffic Signal - ...|      Transportation|            Phone|Duplicate (closed)|05/06/2016 08:22:...|05/06/2016 08:22:...|05/06/2016 08:22:...|05/06/2016 08:22:...|6001 MANCHACA RD,...|     6001|            MANCHACA|AUSTIN|  78745|TRAVIS|       3096240.5|        10050194| 30.2126949| -97.8015215|(30.2126949, -97....|      5|   643M|    MF17|\n",
      "|16-00108062|  TRASIGMA|Traffic Signal - ...|      Transportation|            Phone|Duplicate (closed)|05/10/2016 04:56:...|05/06/2016 05:03:...|05/10/2016 04:56:...|05/10/2016 04:56:...|8401 N CAPITAL OF...|     8401|    CAPITAL OF TEXAS|AUSTIN|  78759|TRAVIS|3105863.35797435|10113092.5341337|30.38498865|-97.76647071|(30.38498865, -97...|     10|   494L|    MH32|\n",
      "|16-00107654|  STREETL2|Street Light Issu...|Austin Energy Dep...|            Phone|            Closed|05/10/2016 06:58:...|05/06/2016 10:28:...|05/10/2016 06:58:...|05/10/2016 06:58:...|300 WEST AVE, AUS...|      300|                WEST|AUSTIN|  78703|TRAVIS|3111493.73999999|     10070696.54|30.26808964|-97.75173887|(30.26808964, -97...|      9|   584V|    MH22|\n",
      "|16-00107641|  STREETL2|Street Light Issu...|Austin Energy Dep...|            Phone|            Closed|05/11/2016 04:41:...|05/06/2016 10:19:...|05/11/2016 04:41:...|05/11/2016 04:41:...|1212 BEGONIA TER,...|     1212|             BEGONIA|AUSTIN|  78741|TRAVIS|3127314.74792452|10058154.0013629|30.23259324|-97.70257675|(30.23259324, -97...|      3|   616W|    ML19|\n",
      "|16-00107655|  STREETL2|Street Light Issu...|Austin Energy Dep...|            Phone|            Closed|05/11/2016 04:42:...|05/06/2016 10:29:...|05/11/2016 04:42:...|05/11/2016 04:42:...|7432 ELK PASS DR,...|     7432|            ELK PASS|AUSTIN|  78744|TRAVIS|3130322.58738476|10046378.9104246|30.20002989| -97.6939397|(30.20002989, -97...|      2|   646T|    ML16|\n",
      "|16-00107684|  STREETL2|Street Light Issu...|Austin Energy Dep...|Spot311 Interface|            Closed|05/11/2016 04:43:...|05/06/2016 10:50:...|05/11/2016 04:43:...|05/11/2016 04:43:...|1820 TREADWELL ST...|     1820|           TREADWELL|AUSTIN|  78704|TRAVIS|3106296.99838993|10067557.0008973|30.25979001|-97.76842531|(30.25979001, -97...|      5|   614C|    MH21|\n",
      "|16-00107711|  STREETL2|Street Light Issu...|Austin Energy Dep...|            Phone|            Closed|05/11/2016 04:43:...|05/06/2016 11:12:...|05/11/2016 04:43:...|05/11/2016 04:43:...|111 ATTAYAC ST, A...|      111|             ATTAYAC|AUSTIN|  78702|TRAVIS|3118045.49753782|10067920.0003881|30.26003767| -97.7311965|(30.26003767, -97...|      3|   615B|    MJ21|\n",
      "|16-00275028|  SWSDEADA|ARR Dead Animal C...|Austin Resource R...|            Phone|            Closed|10/18/2016 09:47:...|10/17/2016 11:52:...|10/18/2016 09:47:...|10/18/2016 09:47:...|2120 HOLLY ST, AU...|     2120|               HOLLY|AUSTIN|  78702|TRAVIS|3120894.96125716|10065141.5085253| 30.2522165|-97.72238014|(30.2522165, -97....|      3|   615G|    MK21|\n",
      "|16-00277192|  SWSDEADA|ARR Dead Animal C...|Austin Resource R...|            Phone|            Closed|10/20/2016 08:31:...|10/19/2016 01:31:...|10/20/2016 08:31:...|10/20/2016 08:31:...|11300 JOLLYVILLE ...|    11300|          JOLLYVILLE|AUSTIN|  78759|TRAVIS|3111507.49950807|10122558.9993158|30.41065138| -97.7478774|(30.41065138, -97...|     10|   465S|    MJ34|\n",
      "|16-00277370|  SWSDEADA|ARR Dead Animal C...|Austin Resource R...|            Phone|            Closed|10/20/2016 09:57:...|10/19/2016 04:05:...|10/20/2016 09:57:...|10/20/2016 09:57:...|10750 SPRINKLE CU...|    10750|     SPRINKLE CUTOFF|AUSTIN|  78754|TRAVIS|3143090.37271682|10104572.6211917|30.35915308| -97.6490914|(30.35915308, -97...|      1|   527F|    MN30|\n",
      "|16-00107570|  TRAFFI10|Traffic Signal - ...|      Transportation|            Phone|            Closed|05/06/2016 09:42:...|05/06/2016 09:30:...|05/06/2016 09:42:...|05/06/2016 09:42:...|E MARTIN LUTHER K...|     null|E MARTIN LUTHER K...|AUSTIN|  78722|TRAVIS|3120408.74847766|10075046.0024282|30.27947367|-97.72318365|(30.27947367, -97...|      1|   585Q|    MK23|\n",
      "|16-00107644|  TRAFFI10|Traffic Signal - ...|      Transportation|            Phone|            Closed|05/06/2016 12:14:...|05/06/2016 10:22:...|05/06/2016 12:14:...|05/06/2016 12:14:...|W ST JOHNS AVE & ...|     null|W ST JOHNS AVE & ...|AUSTIN|  78752|TRAVIS|      3123369.23|     10095957.75|30.33676527| -97.7122465|(30.33676527, -97...|      4|   525Z|    MK28|\n",
      "|16-00108031|  TRAFFI10|Traffic Signal - ...|      Transportation|            Phone|            Closed|05/06/2016 05:19:...|05/06/2016 04:36:...|05/06/2016 05:19:...|05/06/2016 05:19:...|2202 WEBBERVILLE ...|     2202|         WEBBERVILLE|AUSTIN|  78702|TRAVIS|3122399.30511578|10068698.0960416|30.26189578|-97.71735211|(30.26189578, -97...|      1|   615D|    MK21|\n",
      "|16-00108004|  TRASIGMA|Traffic Signal - ...|      Transportation|            Phone|            Closed|05/06/2016 05:20:...|05/06/2016 04:09:...|05/06/2016 05:20:...|05/06/2016 05:20:...|ROYAL CREST DR & ...|     null|ROYAL CREST DR & ...|AUSTIN|  78741|TRAVIS|3119118.96984414|10061305.0421956|30.24178517|-97.72828793|(30.24178517, -97...|      3|   615Q|    MK20|\n",
      "|16-00108027|  TRASIGMA|Traffic Signal - ...|      Transportation|            Phone|            Closed|05/06/2016 05:08:...|05/06/2016 04:33:...|05/06/2016 05:08:...|05/06/2016 05:08:...|W SLAUGHTER LN & ...|     null|W SLAUGHTER LN & ...|AUSTIN|  78749|TRAVIS|3081231.51000001|     10039252.87| 30.1835493|-97.84979909|(30.1835493, -97....|      5|   672G|    MD15|\n",
      "|16-00108170|  TRASIGMA|Traffic Signal - ...|      Transportation|            Phone|            Closed|05/06/2016 06:32:...|05/06/2016 06:23:...|05/06/2016 06:32:...|05/06/2016 06:32:...|6001 MANCHACA RD,...|     6001|            MANCHACA|AUSTIN|  78745|TRAVIS|       3096240.5|        10050194| 30.2126949| -97.8015215|(30.2126949, -97....|      5|   643M|    MF17|\n",
      "|16-00108235|  TRASIGMA|Traffic Signal - ...|      Transportation|            Phone|            Closed|05/06/2016 07:52:...|05/06/2016 07:37:...|05/06/2016 07:52:...|05/06/2016 07:52:...|6001 MANCHACA RD,...|     6001|            MANCHACA|AUSTIN|  78745|TRAVIS|       3096240.5|        10050194| 30.2126949| -97.8015215|(30.2126949, -97....|      5|   643M|    MF17|\n",
      "|16-00108236|  TRASIGMA|Traffic Signal - ...|      Transportation|            Phone|            Closed|05/06/2016 07:52:...|05/06/2016 07:37:...|05/06/2016 07:52:...|05/06/2016 07:52:...|MANCHACA RD & W S...|     null|MANCHACA RD & W S...|AUSTIN|  78745|TRAVIS|3097421.43069483|10051215.9200755|30.21543007|-97.79771009|(30.21543007, -97...|      5|   643H|    MF18|\n",
      "+-----------+----------+--------------------+--------------------+-----------------+------------------+--------------------+--------------------+--------------------+--------------------+--------------------+---------+--------------------+------+-------+------+----------------+----------------+-----------+------------+--------------------+-------+-------+--------+\n",
      "only showing top 20 rows\n",
      "\n",
      "CPU times: user 1.27 ms, sys: 2.89 ms, total: 4.16 ms\n",
      "Wall time: 1.71 s\n"
     ]
    }
   ],
   "source": [
    "%time page_views_df.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 7.26 ms, sys: 5.67 ms, total: 12.9 ms\n",
      "Wall time: 2.82 s\n"
     ]
    }
   ],
   "source": [
    "%time page_views_by_owningDepart_pandas = page_views_df.groupBy('OwningDepart').count().toPandas()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "page_views_by_owningDepart_pandas = page_views_by_owningDepart_pandas.set_index('count').sort_index(ascending=False)\n",
    "page_views_by_owningDepart_pandas.reset_index(level=0,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>OwningDepart</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>81497</td>\n",
       "      <td>Animal Services Office</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>67553</td>\n",
       "      <td>Transportation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>66592</td>\n",
       "      <td>Austin Code Department</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>53938</td>\n",
       "      <td>Austin Resource Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>36809</td>\n",
       "      <td>Public Works</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>17075</td>\n",
       "      <td>Austin Energy Department</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>14799</td>\n",
       "      <td>Health &amp; Human Services</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>14563</td>\n",
       "      <td>Parks &amp; Recreation Department</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>11657</td>\n",
       "      <td>Austin Water Utility</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>11291</td>\n",
       "      <td>Economic Development Department</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>8208</td>\n",
       "      <td>Watershed Protection</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>4235</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>133</td>\n",
       "      <td>Neighborhood Housing &amp; Community Development</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>45</td>\n",
       "      <td>Austin Fire Department</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>7</td>\n",
       "      <td>Public Health</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1</td>\n",
       "      <td>Office of Emergency Management</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    count                                  OwningDepart\n",
       "0   81497                        Animal Services Office\n",
       "1   67553                                Transportation\n",
       "2   66592                        Austin Code Department\n",
       "3   53938                      Austin Resource Recovery\n",
       "4   36809                                  Public Works\n",
       "5   17075                      Austin Energy Department\n",
       "6   14799                       Health & Human Services\n",
       "7   14563                 Parks & Recreation Department\n",
       "8   11657                          Austin Water Utility\n",
       "9   11291               Economic Development Department\n",
       "10   8208                          Watershed Protection\n",
       "11   4235                                          None\n",
       "12    133  Neighborhood Housing & Community Development\n",
       "13     45                        Austin Fire Department\n",
       "14      7                                 Public Health\n",
       "15      1                Office of Emergency Management"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "OwningDepart = page_views_by_owningDepart_pandas\n",
    "OwningDepart"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x11ab13a20>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11aaf8400>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "%matplotlib inline\n",
    "page_views_by_owningDepart_pandas.plot.pie(y='count', figsize=(10, 10), labels=['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','NAN'], \n",
    "              title='Page Views by platform', autopct='%.2f', fontsize=9)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.text.Text at 0x11b4fc860>,\n",
       " <matplotlib.text.Text at 0x11b501278>,\n",
       " <matplotlib.text.Text at 0x11ba0e0b8>,\n",
       " <matplotlib.text.Text at 0x11ba0eba8>,\n",
       " <matplotlib.text.Text at 0x11ba106d8>,\n",
       " <matplotlib.text.Text at 0x11b4fc7f0>,\n",
       " <matplotlib.text.Text at 0x11b174710>,\n",
       " <matplotlib.text.Text at 0x11b167f28>,\n",
       " <matplotlib.text.Text at 0x11ba15080>,\n",
       " <matplotlib.text.Text at 0x11ba159e8>,\n",
       " <matplotlib.text.Text at 0x11ba17518>,\n",
       " <matplotlib.text.Text at 0x11ba1a048>,\n",
       " <matplotlib.text.Text at 0x11ba1ab38>,\n",
       " <matplotlib.text.Text at 0x11ba1d668>,\n",
       " <matplotlib.text.Text at 0x11ba1f198>]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nn54d7VoBAADAAWMHVjuTPFlVfzh8/83MB1YzrbUNVTUzbPd7dvj9qSTnL5h/3lA7VH3hnKdba1NJ\nzqiqw2ZOc3MvHvK32dk9k9zXSWN2dk927XrhqOYtJ9Zpcke7VgAAAJzYFvPhhVG3BA7b/p5srV0y\nlC5P8idJHkxyw1C7PskDw+cHk1zbWjultfb6JBcn+cKwbXB3a23zcAj7dS+bc/3w+d2ZP8QdAAAA\ngBPU2E9YJcnPJflka+27kuxI8pNJppLc31q7McnjmX8zYKpqW2vt/iTbknw7yU1VdWC74M1J7k5y\naubfOvjQUL8rySdaa9uTPJ/k2uNwTwAAAACMZPTAqqq+nOTvHOSntx5i/O1Jbj9I/YtJ3niQ+rcy\nBF4AAAAAnPjGfksgAAAAALwiAisAAAAAuiKwAgAAAKArAisAAAAAuiKwAgAAAKArAisAAAAAuiKw\nAgAAAKArAisAAAAAuiKwAgAAAKArAisAAAAAuiKwAgAAAKArAisAAAAAuiKwAgAAAKArAisAAAAA\nuiKwAgAAAKArAisAAAAAuiKwAgAAAKArAisAAAAAuiKwAgAAAKArAisAAAAAuiKwAgAAAKArAisA\nAAAAuiKwAgAAAKArAisAAAAAuiKwAgAAAKArK5e6AYAk2bdvX6andyx1G8fNhRdelKmpqaVuAwAA\noEsCK6AL09M78tuf/pmsP/O0pW5ldM8+9828890fy8aNm5a6FQAAgC4JrIBurD/ztJxz1quXug0A\nAACWmDOsAAAAAOiKwAoAAACArgisAAAAAOiKwAoAAACArgisAAAAAOiKwAoAAACArgisAAAAAOiK\nwAoAAACArgisAAAAAOiKwAoAAACArgisAAAAAOiKwAoAAACArgisAAAAAOjKykkGtdZWJXlLkk1J\nvpPk/03ySFX91QRzp5PsHuZ9u6o2t9bWJPlUkguSTCe5pqp2D+NvS3Jjkr1Jbqmqh4f6ZUnuTnJq\nkq1VdetQPyXJvUnenOS5JO+pqicmuS8AAAAA+nPYJ6xaa6e31u5I8qUkNyQ5L8nZSa5L8settTuG\nMOtwvpPkh6rqTVW1eai9L/OBV0vyaJLbhr/3hiTXJLk0yZVJPtJaWzHM+WiSLVV1SZJLWmtXDPUt\nSWaralOSO5N8YLJbBwAAAKBHR3rC6l8l+ViS26rqOwt/aK29Ksk7hzHvOsw1VuT/H4xdneQHh8/3\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x115785710>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "from matplotlib import pyplot as plt\n",
    "from matplotlib import rc\n",
    "%matplotlib inline\n",
    "\n",
    "rc('figure', figsize=(20, 8))\n",
    "splt = sns.barplot(x='OwningDepart', y='count', data=OwningDepart)\n",
    "labels=['Animal Services Office', 'Austin Code Department', 'Austin Energy Department',\\\n",
    "        'Austin Fire Department','Austin Resource Recovery','Austin Water Utility','Economic Development Department',\\\n",
    "        'Health & Human Services','Neighborhood Housing & Community Development','Office of Emergency Management',\\\n",
    "        'Parks & Recreation Department','Public Health','Public Works','Transportation','Watershed Protection','NAN']\n",
    "splt.set_xticklabels(labels, rotation=30)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the histogram we can learn that Animal Services Office received most service requests. \n",
    "\n",
    "Also, we can see that Parks & Recreation Department, Public Health, Public Works, Transportation and Watershed Protection\n",
    "received least service requests. \n",
    "\n",
    "Now, a new question raised:\n",
    "* Why the result is different from our expectation that department like Transportation would receive more \n",
    "  service requests? What are the main causes of this result?\n",
    "\n",
    "Besides, we also want to explore what is the distribution of all these service requests in Austin and how long would a department react to the request?\n",
    "\n",
    "To answer these questions, we need to explore the data in different aspects."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** First, we build a map to have an initial exploration of the data for the distribution issue. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import plotly as py\n",
    "py.tools.set_credentials_file(username='zzyy2361669', api_key='U4js9YvyZajjXb1q1g4n')\n",
    "import plotly.plotly as py\n",
    "import plotly.tools as plotly_tools\n",
    "from plotly.graph_objs import *\n",
    "py.sign_in(\"zzyy2361669\", \"U4js9YvyZajjXb1q1g4n\")\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "Dep_List = [\"Animal Services Office\",\"Transportation\", \"Austin Code Department\", \"Austin Resource Recovery\",\\\n",
    "           \"Public Works\", \"Austin Energy Department\",\"Health & Human Services\",\"Parks & Recreation Department\",\\\n",
    "           \"Austin Water Utility\",\"Economic Development Department\",\"Watershed Protection\",\\\n",
    "            \"Neighborhood Housing & Community Development\",\"Austin Fire Department\",\"Office of Emergency Management\"]\n",
    "Color_List = [\"#FF8C69\",\"#FFE4E1\",\"#FFEC8B\",\"#D1EEEE\",\"#AEEEEE\",\"#B4EEB4\",\"#5CACEE\",\"#8470FF\",\"#43CD80\",\"#CD8500\",\\\n",
    "             \"#FF4500\",\"#FFC1C1\",\"#B3B3B3\",\"#8FBC8F\"]\n",
    "\n",
    "df = pd.read_csv('ServiceRequest.csv')\n",
    "df = df.sample(frac=0.005 )   # randomly select 2000 rows in dataframe\n",
    "\n",
    "df['text'] = df['SR Type Code'] + '<br>' + df['SR Description'] + '<br>' + df['Owning Department']\n",
    "\n",
    "#mapbox_access_token = 'pk.eyJ1IjoiY2hlbHNlYXBsb3RseSIsImEiOiJjaXFqeXVzdDkwMHFrZnRtOGtlMGtwcGs4In0.SLidkdBMEap9POJGIe1eGw'\n",
    "mapbox_access_token = \"pk.eyJ1IjoienkyMzYxNjY5IiwiYSI6ImNpdzhtb3NreTAyZ3Eyem1oNGFoaGNzcjUifQ.0KdVns1zQyjGXUvn2Ab_jw\"\n",
    "\n",
    "dat = []\n",
    "for i in range(len(Dep_List)):\n",
    "    df_sub = df[(df[\"Owning Department\"]==Dep_List[i])]  \n",
    "    x = df_sub['Latitude Coordinate'].tolist()\n",
    "    y = df_sub['Longitude Coordinate'].tolist()\n",
    "    \n",
    "    d = Scattermapbox(\n",
    "            lat=x,\n",
    "            lon=y,\n",
    "            mode='markers',\n",
    "            marker=Marker(\n",
    "                size=6, color=Color_List[i] \n",
    "            ),\n",
    "        text = [n for n in df_sub['text']],\n",
    "        name = Dep_List[i])\n",
    "    dat.append(d)\n",
    "    \n",
    "data = Data(dat)      \n",
    "\n",
    "layout = Layout(\n",
    "    autosize=True,\n",
    "    width=860,\n",
    "    height=600,\n",
    "    mapbox=dict(\n",
    "        accesstoken=mapbox_access_token,\n",
    "        bearing=0,\n",
    "        center=dict(\n",
    "            lat=30.3,\n",
    "            lon=-97.8\n",
    "        ),\n",
    "        pitch=0,\n",
    "        zoom=10\n",
    "    ),\n",
    ")\n",
    "\n",
    "fig = dict(data=data, layout=layout)\n",
    "py.iplot(fig, filename='Service Requests', validate=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the map, we can see that some of the requests are concentrated while requests for Animal Service Office are scattered.\n",
    "\n",
    "Using the map, we can have a direct exploration of all the data. Each point can show its department and service request description."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Which columns interest you the most?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the initial data exploration, the columns interest us most are SRTypeCode, SRdescription, Owning Department, Create Date, Close Date and Geocode"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** -----End of Data Exploration------ **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Use Spark to Explore Data. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "from operator import add\n",
    "RS = sc.textFile('ServiceRequest.csv')\n",
    "RS.count()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "SR_Type_Code = RS \\\n",
    "    .map(lambda r: r.split(\",\")) \\\n",
    "    .map(lambda r: ((r[1], r[2]), 1))\n",
    "key_func = lambda k, v: -v\n",
    "SR_Type_Code_counts = SR_Type_Code \\\n",
    "    .reduceByKey(add) \\\n",
    "    .takeOrdered(100, key=lambda r: -r[1])\n",
    "SR_Type_Code_counts"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 2 - Wrangling (35 points)\n",
    "\n",
    "\n",
    "Based on what you found above, wrangle the data into a format suitable for analysis. This may involve\n",
    "cleaning, filtering, merging, and modeling steps, any and all of which are valid for this project. Describe your\n",
    "process as you proceed, and document any scripts, databases, or other models you develop. Be specific about\n",
    "any key decisions to modify or remove data, how you overcame any challenges, and all assumptions you make\n",
    "about the meaning of variables and their values.\n",
    "Verify that your wrangling steps have succeeded (for example, if you loaded the data into a dimensional\n",
    "model, ensure that the fact table contains the right number of records)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Create and connect to database. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The sql extension is already loaded. To reload it, use:\n",
      "  %reload_ext sql\n"
     ]
    }
   ],
   "source": [
    "%load_ext sql"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[sudo] password for jovyan: Restarting PostgreSQL 9.5 database server: main.\n"
     ]
    }
   ],
   "source": [
    "!echo 'redspot' | sudo -S service postgresql restart"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The following cells create the database 'ServiceRequest' and make a connection to it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "createdb: database creation failed: ERROR:  database \"ServiceRequest\" already exists\r\n"
     ]
    }
   ],
   "source": [
    "!createdb -U dbuser ServiceRequest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Connected: dbuser@ServiceRequest'"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%sql postgresql://dbuser@localhost/ServiceRequest"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Create table. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n",
      "Done.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DROP TABLE IF EXISTS  ServiceRequest;\n",
    "CREATE TABLE  ServiceRequest\n",
    "(\n",
    "    SRID VARCHAR(16),\n",
    "    SRTypeCode VARCHAR(16),\n",
    "    SRdes VARCHAR(60),\n",
    "    OwningDepart VARCHAR(60),\n",
    "    MethodReceived VARCHAR(25),\n",
    "    SRStatus VARCHAR(35),\n",
    "    ChangeDate TIMESTAMP,\n",
    "    CreateDate TIMESTAMP,\n",
    "    LastUpdateDate TIMESTAMP,\n",
    "    CloseDate TIMESTAMP,\n",
    "    SRLoc VARCHAR(160),\n",
    "    StreetNum VARCHAR(8),\n",
    "    StreetName VARCHAR(100),\n",
    "    City VARCHAR(18),\n",
    "    ZipCode VARCHAR(8),\n",
    "    County VARCHAR(16),\n",
    "    StatePlaneX CHAR(40),\n",
    "    StatePlaneY VARCHAR(40),\n",
    "    Latitude VARCHAR(40),\n",
    "    Longitude VARCHAR(40),\n",
    "    Geocode VARCHAR(60),\n",
    "    Council VARCHAR(8),\n",
    "    MapPage VARCHAR(8),\n",
    "    MapTitle VARCHAR(8)\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Load the data. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/jovyan/work\r\n"
     ]
    }
   ],
   "source": [
    "!pwd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "388403 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "COPY ServiceRequest FROM '/home/jovyan/work/ServiceRequest.csv'\n",
    "CSV\n",
    "HEADER\n",
    "QUOTE '\"'\n",
    "DELIMITER ',';"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Verify the loaded records. **\n",
    "\n",
    "Below cell shows that the records number loaded to database is correct."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>388403</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(388403,)]"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT COUNT(*) FROM ServiceRequest;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Deal with null value **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4234 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DELETE FROM ServiceRequest WHERE SRID IS NULL;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n",
      "384169 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DROP TABLE IF EXISTS SR;\n",
    "CREATE TABLE SR as (\n",
    "SELECT\n",
    "    SRID\n",
    "    ,SRTypeCode\n",
    "    , coalesce(SRdes,'n/a') as SRdes\n",
    "    , coalesce(OwningDepart, 'n/a') as OwningDepart\n",
    "    , coalesce(MethodReceived, 'n/a') as MethodReceived\n",
    "    , coalesce(SRStatus, 'n/a') as SRStatus\n",
    "    , coalesce(ChangeDate, '01/01/1900  00:00:00 AM') as ChangeDate\n",
    "    , coalesce(CreateDate, '01/01/1900  00:00:00 AM') as CreateDate\n",
    "    , coalesce(LastUpdateDate, '01/01/1900  00:00:00 AM') as LastUpdateDate\n",
    "    , coalesce(CloseDate, '01/01/1900  00:00:00 AM') as CloseDate\n",
    "    , coalesce(SRLoc, 'n/a') as SRLoc\n",
    "    , coalesce(StreetNum, 'n/a') as StreetNum\n",
    "    , coalesce(StreetName, 'n/a') as StreetName\n",
    "    , coalesce(City, 'n/a') as City\n",
    "    , coalesce(ZipCode, 'n/a') as ZipCode\n",
    "    , coalesce(County, 'n/a') as County\n",
    "    , coalesce(StatePlaneX, 'n/a') as StatePlaneX\n",
    "    , coalesce(StatePlaneY, 'n/a') as StatePlaneY\n",
    "    , coalesce(Latitude, '0') as Latitude\n",
    "    , coalesce(Longitude, '0') as Longitude\n",
    "    , coalesce(Geocode, '(0,0)') as Geocode\n",
    "    , coalesce(Council, 'n/a') as Council\n",
    "    , coalesce(MapPage, 'n/a') as MapPage\n",
    "    , coalesce(MapTitle, 'n/a') as MapTitle\n",
    "FROM ServiceRequest\n",
    ");\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, let's see the first 5 rows in the database."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>srid</th>\n",
       "        <th>srtypecode</th>\n",
       "        <th>srdes</th>\n",
       "        <th>owningdepart</th>\n",
       "        <th>methodreceived</th>\n",
       "        <th>srstatus</th>\n",
       "        <th>changedate</th>\n",
       "        <th>createdate</th>\n",
       "        <th>lastupdatedate</th>\n",
       "        <th>closedate</th>\n",
       "        <th>srloc</th>\n",
       "        <th>streetnum</th>\n",
       "        <th>streetname</th>\n",
       "        <th>city</th>\n",
       "        <th>zipcode</th>\n",
       "        <th>county</th>\n",
       "        <th>stateplanex</th>\n",
       "        <th>stateplaney</th>\n",
       "        <th>latitude</th>\n",
       "        <th>longitude</th>\n",
       "        <th>geocode</th>\n",
       "        <th>council</th>\n",
       "        <th>mappage</th>\n",
       "        <th>maptitle</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107769</td>\n",
       "        <td>TRASIGMA</td>\n",
       "        <td>Traffic Signal - Maintenance</td>\n",
       "        <td>Transportation</td>\n",
       "        <td>Phone</td>\n",
       "        <td>Duplicate (closed)</td>\n",
       "        <td>2016-05-06 12:11:57</td>\n",
       "        <td>2016-05-06 12:01:46</td>\n",
       "        <td>2016-05-06 12:11:57</td>\n",
       "        <td>2016-05-06 12:11:57</td>\n",
       "        <td>WINDSOR RD &amp; EXPOSITION BLVD, AUSTIN, TX 78703</td>\n",
       "        <td>n/a</td>\n",
       "        <td>WINDSOR RD &amp; EXPOSITION BLVD</td>\n",
       "        <td>AUSTIN</td>\n",
       "        <td>78703</td>\n",
       "        <td>TRAVIS</td>\n",
       "        <td>3106038.49745799                        </td>\n",
       "        <td>10080978.0030157</td>\n",
       "        <td>30.29669887</td>\n",
       "        <td>-97.76826374</td>\n",
       "        <td>(30.29669887, -97.76826374)</td>\n",
       "        <td>10</td>\n",
       "        <td>584C</td>\n",
       "        <td>MH24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00108244</td>\n",
       "        <td>TRASIGMA</td>\n",
       "        <td>Traffic Signal - Maintenance</td>\n",
       "        <td>Transportation</td>\n",
       "        <td>Phone</td>\n",
       "        <td>Duplicate (closed)</td>\n",
       "        <td>2016-05-06 19:51:27</td>\n",
       "        <td>2016-05-06 19:51:27</td>\n",
       "        <td>2016-05-06 19:51:27</td>\n",
       "        <td>2016-05-06 19:51:27</td>\n",
       "        <td>6001 MANCHACA RD, AUSTIN, TX 78745</td>\n",
       "        <td>6001</td>\n",
       "        <td>MANCHACA</td>\n",
       "        <td>AUSTIN</td>\n",
       "        <td>78745</td>\n",
       "        <td>TRAVIS</td>\n",
       "        <td>3096240.5                               </td>\n",
       "        <td>10050194</td>\n",
       "        <td>30.2126949</td>\n",
       "        <td>-97.8015215</td>\n",
       "        <td>(30.2126949, -97.8015215)</td>\n",
       "        <td>5</td>\n",
       "        <td>643M</td>\n",
       "        <td>MF17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00108269</td>\n",
       "        <td>TRASIGMA</td>\n",
       "        <td>Traffic Signal - Maintenance</td>\n",
       "        <td>Transportation</td>\n",
       "        <td>Phone</td>\n",
       "        <td>Duplicate (closed)</td>\n",
       "        <td>2016-05-06 20:22:56</td>\n",
       "        <td>2016-05-06 20:22:56</td>\n",
       "        <td>2016-05-06 20:22:56</td>\n",
       "        <td>2016-05-06 20:22:56</td>\n",
       "        <td>6001 MANCHACA RD, AUSTIN, TX 78745</td>\n",
       "        <td>6001</td>\n",
       "        <td>MANCHACA</td>\n",
       "        <td>AUSTIN</td>\n",
       "        <td>78745</td>\n",
       "        <td>TRAVIS</td>\n",
       "        <td>3096240.5                               </td>\n",
       "        <td>10050194</td>\n",
       "        <td>30.2126949</td>\n",
       "        <td>-97.8015215</td>\n",
       "        <td>(30.2126949, -97.8015215)</td>\n",
       "        <td>5</td>\n",
       "        <td>643M</td>\n",
       "        <td>MF17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00108062</td>\n",
       "        <td>TRASIGMA</td>\n",
       "        <td>Traffic Signal - Maintenance</td>\n",
       "        <td>Transportation</td>\n",
       "        <td>Phone</td>\n",
       "        <td>Duplicate (closed)</td>\n",
       "        <td>2016-05-10 16:56:52</td>\n",
       "        <td>2016-05-06 17:03:45</td>\n",
       "        <td>2016-05-10 16:56:52</td>\n",
       "        <td>2016-05-10 16:56:52</td>\n",
       "        <td>8401 N CAPITAL OF TEXAS HWY NB, AUSTIN, TX 78759</td>\n",
       "        <td>8401</td>\n",
       "        <td>CAPITAL OF TEXAS</td>\n",
       "        <td>AUSTIN</td>\n",
       "        <td>78759</td>\n",
       "        <td>TRAVIS</td>\n",
       "        <td>3105863.35797435                        </td>\n",
       "        <td>10113092.5341337</td>\n",
       "        <td>30.38498865</td>\n",
       "        <td>-97.76647071</td>\n",
       "        <td>(30.38498865, -97.76647071)</td>\n",
       "        <td>10</td>\n",
       "        <td>494L</td>\n",
       "        <td>MH32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107654</td>\n",
       "        <td>STREETL2</td>\n",
       "        <td>Street Light Issue- Address</td>\n",
       "        <td>Austin Energy Department</td>\n",
       "        <td>Phone</td>\n",
       "        <td>Closed</td>\n",
       "        <td>2016-05-10 06:58:01</td>\n",
       "        <td>2016-05-06 10:28:16</td>\n",
       "        <td>2016-05-10 06:58:01</td>\n",
       "        <td>2016-05-10 06:58:01</td>\n",
       "        <td>300 WEST AVE, AUSTIN, TX 78703</td>\n",
       "        <td>300</td>\n",
       "        <td>WEST</td>\n",
       "        <td>AUSTIN</td>\n",
       "        <td>78703</td>\n",
       "        <td>TRAVIS</td>\n",
       "        <td>3111493.73999999                        </td>\n",
       "        <td>10070696.54</td>\n",
       "        <td>30.26808964</td>\n",
       "        <td>-97.75173887</td>\n",
       "        <td>(30.26808964, -97.75173887)</td>\n",
       "        <td>9</td>\n",
       "        <td>584V</td>\n",
       "        <td>MH22</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('16-00107769', 'TRASIGMA', 'Traffic Signal - Maintenance', 'Transportation', 'Phone', 'Duplicate (closed)', datetime.datetime(2016, 5, 6, 12, 11, 57), datetime.datetime(2016, 5, 6, 12, 1, 46), datetime.datetime(2016, 5, 6, 12, 11, 57), datetime.datetime(2016, 5, 6, 12, 11, 57), 'WINDSOR RD & EXPOSITION BLVD, AUSTIN, TX 78703', 'n/a', 'WINDSOR RD & EXPOSITION BLVD', 'AUSTIN', '78703', 'TRAVIS', '3106038.49745799                        ', '10080978.0030157', '30.29669887', '-97.76826374', '(30.29669887, -97.76826374)', '10', '584C', 'MH24'),\n",
       " ('16-00108244', 'TRASIGMA', 'Traffic Signal - Maintenance', 'Transportation', 'Phone', 'Duplicate (closed)', datetime.datetime(2016, 5, 6, 19, 51, 27), datetime.datetime(2016, 5, 6, 19, 51, 27), datetime.datetime(2016, 5, 6, 19, 51, 27), datetime.datetime(2016, 5, 6, 19, 51, 27), '6001 MANCHACA RD, AUSTIN, TX 78745', '6001', 'MANCHACA', 'AUSTIN', '78745', 'TRAVIS', '3096240.5                               ', '10050194', '30.2126949', '-97.8015215', '(30.2126949, -97.8015215)', '5', '643M', 'MF17'),\n",
       " ('16-00108269', 'TRASIGMA', 'Traffic Signal - Maintenance', 'Transportation', 'Phone', 'Duplicate (closed)', datetime.datetime(2016, 5, 6, 20, 22, 56), datetime.datetime(2016, 5, 6, 20, 22, 56), datetime.datetime(2016, 5, 6, 20, 22, 56), datetime.datetime(2016, 5, 6, 20, 22, 56), '6001 MANCHACA RD, AUSTIN, TX 78745', '6001', 'MANCHACA', 'AUSTIN', '78745', 'TRAVIS', '3096240.5                               ', '10050194', '30.2126949', '-97.8015215', '(30.2126949, -97.8015215)', '5', '643M', 'MF17'),\n",
       " ('16-00108062', 'TRASIGMA', 'Traffic Signal - Maintenance', 'Transportation', 'Phone', 'Duplicate (closed)', datetime.datetime(2016, 5, 10, 16, 56, 52), datetime.datetime(2016, 5, 6, 17, 3, 45), datetime.datetime(2016, 5, 10, 16, 56, 52), datetime.datetime(2016, 5, 10, 16, 56, 52), '8401 N CAPITAL OF TEXAS HWY NB, AUSTIN, TX 78759', '8401', 'CAPITAL OF TEXAS', 'AUSTIN', '78759', 'TRAVIS', '3105863.35797435                        ', '10113092.5341337', '30.38498865', '-97.76647071', '(30.38498865, -97.76647071)', '10', '494L', 'MH32'),\n",
       " ('16-00107654', 'STREETL2', 'Street Light Issue- Address', 'Austin Energy Department', 'Phone', 'Closed', datetime.datetime(2016, 5, 10, 6, 58, 1), datetime.datetime(2016, 5, 6, 10, 28, 16), datetime.datetime(2016, 5, 10, 6, 58, 1), datetime.datetime(2016, 5, 10, 6, 58, 1), '300 WEST AVE, AUSTIN, TX 78703', '300', 'WEST', 'AUSTIN', '78703', 'TRAVIS', '3111493.73999999                        ', '10070696.54', '30.26808964', '-97.75173887', '(30.26808964, -97.75173887)', '9', '584V', 'MH22')]"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT * FROM SR\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Check the one to one relationship"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Using the below code to find whether SR Type code and SR Description have a 1-to-1 relationship.\n",
    "* Function checkdependency check if two columns are dependent (bijection)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "CREATE OR REPLACE FUNCTION checkdependency(text,text) RETURNS text AS $$\n",
    "DECLARE\n",
    "    result text; \n",
    "    c1 text;\n",
    "    c2 text;\n",
    "    r1 boolean;\n",
    "    r2 boolean;\n",
    "BEGIN\n",
    "    c1 := $1;\n",
    "    c2 := $2;\n",
    "    EXECUTE 'SELECT count(*)=0 FROM ( SELECT '|| c1 ||' FROM ( SELECT distinct('|| c1 ||'),'||c2||' FROM SR )t1 GROUP BY '|| c1 ||' HAVING count(*)>1)t2'\n",
    "        INTO r1;\n",
    "    EXECUTE 'SELECT count(*)=0 FROM ( SELECT '|| c2 ||' FROM ( SELECT distinct('|| c2 ||'),'||c1||' FROM SR )t1 GROUP BY '|| c2 ||' HAVING count(*)>1)t2'\n",
    "        INTO r2;\n",
    "    SELECT r1 AND r2 INTO result;\n",
    "    RETURN result;\n",
    "END\n",
    "$$ LANGUAGE plpgsql;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>checkdependency</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>false</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('false',)]"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql \n",
    "SELECT checkdependency('SRTypeCode','SRdes');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "### Create the Service Request Type Dimension table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n",
      "Done.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DROP TABLE IF EXISTS SRType;\n",
    "CREATE TABLE SRType\n",
    "(\n",
    "    SRType_key serial,\n",
    "    SRType_Code VARCHAR(16),\n",
    "    SRType_Des VARCHAR(60),\n",
    "    PRIMARY KEY (SRType_key)\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "135 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "INSERT INTO SRType (SRType_Code, SRType_Des)\n",
    "SELECT DISTINCT SRTypeCode, SRdes\n",
    "FROM ServiceRequest;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>srtype_key</th>\n",
       "        <th>srtype_code</th>\n",
       "        <th>srtype_des</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>PRCEMET1</td>\n",
       "        <td>Park Maintenance - Cemeteries</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>SWSDUMPS</td>\n",
       "        <td>ARR Dumpster</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>DRFLOODG</td>\n",
       "        <td>Flooding  Current (Non-Emergency)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>DRSSPIPE</td>\n",
       "        <td>Standing Water</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>6</td>\n",
       "        <td>AWUHYDRA</td>\n",
       "        <td>Water Theft Report</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>7</td>\n",
       "        <td>SBRSR</td>\n",
       "        <td>Road Sanding Request</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>8</td>\n",
       "        <td>SIGNPARK</td>\n",
       "        <td>Sign - Parking Sign Maintenance</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>9</td>\n",
       "        <td>PRMTPOOL</td>\n",
       "        <td>Park Maintenance - Pool Issues</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10</td>\n",
       "        <td>RESTBREA</td>\n",
       "        <td>Austin Code - Construction Ordinance SR</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, None, None),\n",
       " (2, 'PRCEMET1', 'Park Maintenance - Cemeteries'),\n",
       " (3, 'SWSDUMPS', 'ARR Dumpster'),\n",
       " (4, 'DRFLOODG', 'Flooding  Current (Non-Emergency)'),\n",
       " (5, 'DRSSPIPE', 'Standing Water'),\n",
       " (6, 'AWUHYDRA', 'Water Theft Report'),\n",
       " (7, 'SBRSR', 'Road Sanding Request'),\n",
       " (8, 'SIGNPARK', 'Sign - Parking Sign Maintenance'),\n",
       " (9, 'PRMTPOOL', 'Park Maintenance - Pool Issues'),\n",
       " (10, 'RESTBREA', 'Austin Code - Construction Ordinance SR')]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM SRType\n",
    "LIMIT 10;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create the Department Dimension table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n",
      "Done.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DROP TABLE IF EXISTS Department;\n",
    "CREATE TABLE Department\n",
    "(\n",
    "    Dept_key serial,\n",
    "    Department_Name VARCHAR(60),\n",
    "    PRIMARY KEY (Dept_key)\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "16 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "INSERT INTO Department (Department_Name)\n",
    "SELECT DISTINCT OwningPart\n",
    "FROM SR;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>dept_key</th>\n",
       "        <th>department_name</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>Public Health</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>Animal Services Office</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>Economic Development Department</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>n/a</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>Austin Water Utility</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, 'Public Health'),\n",
       " (2, 'Animal Services Office'),\n",
       " (3, 'Economic Development Department'),\n",
       " (4, 'n/a'),\n",
       " (5, 'Austin Water Utility')]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM Department\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create the Method Dimension table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n",
      "Done.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DROP TABLE IF EXISTS Method;\n",
    "CREATE TABLE Method\n",
    "(\n",
    "    Method_key serial,\n",
    "    Method_Received VARCHAR(25),\n",
    "    PRIMARY KEY (Method_key)\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "19 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "INSERT INTO Method (Method_Received)\n",
    "SELECT DISTINCT MethodReceived\n",
    "FROM ServiceRequest;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>method_key</th>\n",
       "        <th>method_received</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>Mobile Devi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>Mass Entry</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>CSR - Follow On SR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>Web</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, None),\n",
       " (2, 'Mobile Devi'),\n",
       " (3, 'Mass Entry'),\n",
       " (4, 'CSR - Follow On SR'),\n",
       " (5, 'Web')]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM Method\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create the Status Dimension table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n",
      "Done.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DROP TABLE IF EXISTS Status;\n",
    "CREATE TABLE Status\n",
    "(\n",
    "    Status_key serial,\n",
    "    SR_Status VARCHAR(35),\n",
    "    PRIMARY KEY (Status_key)\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "INSERT INTO Status (SR_Status)\n",
    "SELECT DISTINCT SRStatus\n",
    "FROM SR;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>status_key</th>\n",
       "        <th>sr_status</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>Closed -Incomplete Information</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>Work In Progress</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>n/a</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>Open</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>Resolved</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, 'Closed -Incomplete Information'),\n",
       " (2, 'Work In Progress'),\n",
       " (3, 'n/a'),\n",
       " (4, 'Open'),\n",
       " (5, 'Resolved')]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM Status\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create the Location Dimension table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n",
      "Done.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DROP TABLE IF EXISTS Location;\n",
    "CREATE TABLE Location\n",
    "(\n",
    "    Location_key serial,\n",
    "    SR_Location VARCHAR(160),\n",
    "    Street_Name VARCHAR(100),\n",
    "    City VARCHAR(18),\n",
    "    ZipCode VARCHAR(8),\n",
    "    County VARCHAR(16),\n",
    "    Latitude VARCHAR(40),\n",
    "    Longitude VARCHAR(40),\n",
    "    District VARCHAR(8),\n",
    "    PRIMARY KEY (Location_key)\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "193537 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "INSERT INTO Location (SR_Location,Street_Name,City,ZipCode,County,Latitude,Longitude,District)\n",
    "SELECT DISTINCT \n",
    "    SRLoc,\n",
    "    StreetName,\n",
    "    City,\n",
    "    ZipCode,\n",
    "    County,\n",
    "    Latitude,\n",
    "    Longitude,\n",
    "    Council\n",
    "FROM SR;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>location_key</th>\n",
       "        <th>sr_location</th>\n",
       "        <th>street_name</th>\n",
       "        <th>city</th>\n",
       "        <th>zipcode</th>\n",
       "        <th>county</th>\n",
       "        <th>latitude</th>\n",
       "        <th>longitude</th>\n",
       "        <th>district</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>*METER TX</td>\n",
       "        <td>*Meter </td>\n",
       "        <td>n/a</td>\n",
       "        <td>n/a</td>\n",
       "        <td>n/a</td>\n",
       "        <td>0</td>\n",
       "        <td>0</td>\n",
       "        <td>n/a</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>0 BASTROP HWY NB, AUSTIN, TX</td>\n",
       "        <td>BASTROP HWY</td>\n",
       "        <td>AUSTIN</td>\n",
       "        <td>78725</td>\n",
       "        <td>TRAVIS</td>\n",
       "        <td>30.24562909</td>\n",
       "        <td>-97.69029776</td>\n",
       "        <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>0 E US 290 HWY EB, AUSTIN, TX</td>\n",
       "        <td>290</td>\n",
       "        <td>AUSTIN</td>\n",
       "        <td>78724</td>\n",
       "        <td>TRAVIS</td>\n",
       "        <td>30.32544739</td>\n",
       "        <td>-97.67157404</td>\n",
       "        <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>0 MANOR TO ED BLUESTEIN NB RAMP, AUSTIN, TX 78724</td>\n",
       "        <td>MANOR TO ED BLUESTEIN NB</td>\n",
       "        <td>AUSTIN</td>\n",
       "        <td>78724</td>\n",
       "        <td>TRAVIS</td>\n",
       "        <td>30.31712713</td>\n",
       "        <td>-97.66271067</td>\n",
       "        <td>n/a</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>0 N SH 130 NB, AUSTIN, TX</td>\n",
       "        <td>130</td>\n",
       "        <td>AUSTIN</td>\n",
       "        <td>78653</td>\n",
       "        <td>TRAVIS</td>\n",
       "        <td>30.30933259</td>\n",
       "        <td>-97.57004581</td>\n",
       "        <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>6</td>\n",
       "        <td>0 RESEARCH BLVD SVRD NB, AUSTIN, TX 78758</td>\n",
       "        <td>RESEARCH BLVD SVRD</td>\n",
       "        <td>AUSTIN</td>\n",
       "        <td>78758</td>\n",
       "        <td>TRAVIS</td>\n",
       "        <td>30.37313223</td>\n",
       "        <td>-97.72566097</td>\n",
       "        <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>7</td>\n",
       "        <td>0 SERVICE RD N/A N/A N/A, AUSTIN, TX 78758</td>\n",
       "        <td>SERVICE</td>\n",
       "        <td>AUSTIN</td>\n",
       "        <td>78719</td>\n",
       "        <td>TRAVIS</td>\n",
       "        <td>30.20670769</td>\n",
       "        <td>-97.67299638</td>\n",
       "        <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>8</td>\n",
       "        <td>0 TRAIL DRIVER, DRIPPING SPRINGS, TX 78736</td>\n",
       "        <td>TRAIL DRIVER</td>\n",
       "        <td>DRIPPING SPRINGS</td>\n",
       "        <td>78737</td>\n",
       "        <td>HAYS</td>\n",
       "        <td>30.23233167</td>\n",
       "        <td>-98.00503823</td>\n",
       "        <td>n/a</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>9</td>\n",
       "        <td>0328 TX</td>\n",
       "        <td>n/a</td>\n",
       "        <td>n/a</td>\n",
       "        <td>n/a</td>\n",
       "        <td>n/a</td>\n",
       "        <td>0</td>\n",
       "        <td>0</td>\n",
       "        <td>n/a</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10</td>\n",
       "        <td>1 APPLEGREEN CT, THE HILLS, TX 78738</td>\n",
       "        <td>APPLEGREEN</td>\n",
       "        <td>THE HILLS</td>\n",
       "        <td>78738</td>\n",
       "        <td>TRAVIS</td>\n",
       "        <td>30.34294091</td>\n",
       "        <td>-97.9936555</td>\n",
       "        <td>n/a</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, '*METER TX', '*Meter ', 'n/a', 'n/a', 'n/a', '0', '0', 'n/a'),\n",
       " (2, '0 BASTROP HWY NB, AUSTIN, TX', 'BASTROP HWY', 'AUSTIN', '78725', 'TRAVIS', '30.24562909', '-97.69029776', '3'),\n",
       " (3, '0 E US 290 HWY EB, AUSTIN, TX', '290', 'AUSTIN', '78724', 'TRAVIS', '30.32544739', '-97.67157404', '1'),\n",
       " (4, '0 MANOR TO ED BLUESTEIN NB RAMP, AUSTIN, TX 78724', 'MANOR TO ED BLUESTEIN NB', 'AUSTIN', '78724', 'TRAVIS', '30.31712713', '-97.66271067', 'n/a'),\n",
       " (5, '0 N SH 130 NB, AUSTIN, TX', '130', 'AUSTIN', '78653', 'TRAVIS', '30.30933259', '-97.57004581', '1'),\n",
       " (6, '0 RESEARCH BLVD SVRD NB, AUSTIN, TX 78758', 'RESEARCH BLVD SVRD', 'AUSTIN', '78758', 'TRAVIS', '30.37313223', '-97.72566097', '7'),\n",
       " (7, '0 SERVICE RD N/A N/A N/A, AUSTIN, TX 78758', 'SERVICE', 'AUSTIN', '78719', 'TRAVIS', '30.20670769', '-97.67299638', '2'),\n",
       " (8, '0 TRAIL DRIVER, DRIPPING SPRINGS, TX 78736', 'TRAIL DRIVER', 'DRIPPING SPRINGS', '78737', 'HAYS', '30.23233167', '-98.00503823', 'n/a'),\n",
       " (9, '0328 TX', 'n/a', 'n/a', 'n/a', 'n/a', '0', '0', 'n/a'),\n",
       " (10, '1 APPLEGREEN CT, THE HILLS, TX 78738', 'APPLEGREEN', 'THE HILLS', '78738', 'TRAVIS', '30.34294091', '-97.9936555', 'n/a')]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM Location\n",
    "LIMIT 10;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create the 'Create Case Time' Dimension table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n",
      "Done.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DROP TABLE IF EXISTS CreateCaseTime;\n",
    "CREATE TABLE CreateCaseTime (\n",
    "    Create_Date_Key SERIAL,\n",
    "    CreateCase_time TIMESTAMP,\n",
    "    CreateCase_date CHAR(10),\n",
    "    CreateCase_hour INTEGER,\n",
    "    CreateCase_day INTEGER,\n",
    "    CreateCase_month INTEGER,\n",
    "    CreateCase_quarter INTEGER,\n",
    "    CreateCase_year INTEGER,\n",
    "    Create_day_of_week_str CHAR(9),\n",
    "    Create_day_of_week INTEGER,\n",
    "    CreateCase_is_weekend BOOLEAN,\n",
    "    CreateCase_is_weekday BOOLEAN,\n",
    "    PRIMARY KEY (Create_Date_Key)\n",
    ");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "375298 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "INSERT INTO CreateCaseTime (CreateCase_time,CreateCase_date,CreateCase_year,CreateCase_month,CreateCase_day, CreateCase_hour,CreateCase_quarter,\n",
    "    Create_day_of_week_str,Create_day_of_week,CreateCase_is_weekend,CreateCase_is_weekday)\n",
    "SELECT DISTINCT CreateDate AS CreateCase_time,\n",
    "    TO_CHAR(CreateDate, 'YYYY-MM-DD') AS CreateCase_date, \n",
    "    CAST(TO_CHAR(CreateDate, 'YYYY') AS INTEGER) AS CreateCase_year,\n",
    "    CAST(TO_CHAR(CreateDate, 'MM') AS INTEGER) AS CreateCase_month,\n",
    "    CAST(TO_CHAR(CreateDate, 'DD') AS INTEGER) AS CreateCase_day,\n",
    "    CAST(TO_CHAR(CreateDate, 'HH24') AS INTEGER) AS CreateCase_hour,\n",
    "    CAST(TO_CHAR(CreateDate, 'Q') AS INTEGER) AS CreateCase_quarter,\n",
    "    TO_CHAR(CreateDate, 'Day') AS Create_day_of_week_str,\n",
    "    CAST(TO_CHAR(CreateDate, 'D') AS INTEGER) AS Create_day_of_week,\n",
    "    CASE WHEN CAST(TO_CHAR(CreateDate, 'D') AS INTEGER) IN (1, 7) \n",
    "        THEN TRUE\n",
    "        ELSE FALSE\n",
    "    END AS CreateCase_is_weekend,\n",
    "    CASE WHEN CAST(TO_CHAR(CreateDate, 'D') AS INTEGER) NOT IN (1, 7) \n",
    "        THEN TRUE\n",
    "        ELSE FALSE\n",
    "    END AS CreateCase_is_weekday\n",
    "FROM SR;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "ALTER TABLE CreateCaseTime DROP COLUMN createcase_time;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>create_date_key</th>\n",
       "        <th>createcase_date</th>\n",
       "        <th>createcase_hour</th>\n",
       "        <th>createcase_day</th>\n",
       "        <th>createcase_month</th>\n",
       "        <th>createcase_quarter</th>\n",
       "        <th>createcase_year</th>\n",
       "        <th>create_day_of_week_str</th>\n",
       "        <th>create_day_of_week</th>\n",
       "        <th>createcase_is_weekend</th>\n",
       "        <th>createcase_is_weekday</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>2015-09-10</td>\n",
       "        <td>8</td>\n",
       "        <td>10</td>\n",
       "        <td>9</td>\n",
       "        <td>3</td>\n",
       "        <td>2015</td>\n",
       "        <td>Thursday </td>\n",
       "        <td>5</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>2016-08-13</td>\n",
       "        <td>12</td>\n",
       "        <td>13</td>\n",
       "        <td>8</td>\n",
       "        <td>3</td>\n",
       "        <td>2016</td>\n",
       "        <td>Saturday </td>\n",
       "        <td>7</td>\n",
       "        <td>True</td>\n",
       "        <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>2014-02-28</td>\n",
       "        <td>8</td>\n",
       "        <td>28</td>\n",
       "        <td>2</td>\n",
       "        <td>1</td>\n",
       "        <td>2014</td>\n",
       "        <td>Friday   </td>\n",
       "        <td>6</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>2015-11-28</td>\n",
       "        <td>17</td>\n",
       "        <td>28</td>\n",
       "        <td>11</td>\n",
       "        <td>4</td>\n",
       "        <td>2015</td>\n",
       "        <td>Saturday </td>\n",
       "        <td>7</td>\n",
       "        <td>True</td>\n",
       "        <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>2016-03-09</td>\n",
       "        <td>11</td>\n",
       "        <td>9</td>\n",
       "        <td>3</td>\n",
       "        <td>1</td>\n",
       "        <td>2016</td>\n",
       "        <td>Wednesday</td>\n",
       "        <td>4</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>6</td>\n",
       "        <td>2015-04-16</td>\n",
       "        <td>13</td>\n",
       "        <td>16</td>\n",
       "        <td>4</td>\n",
       "        <td>2</td>\n",
       "        <td>2015</td>\n",
       "        <td>Thursday </td>\n",
       "        <td>5</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>7</td>\n",
       "        <td>2016-09-09</td>\n",
       "        <td>14</td>\n",
       "        <td>9</td>\n",
       "        <td>9</td>\n",
       "        <td>3</td>\n",
       "        <td>2016</td>\n",
       "        <td>Friday   </td>\n",
       "        <td>6</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>8</td>\n",
       "        <td>2015-04-23</td>\n",
       "        <td>10</td>\n",
       "        <td>23</td>\n",
       "        <td>4</td>\n",
       "        <td>2</td>\n",
       "        <td>2015</td>\n",
       "        <td>Thursday </td>\n",
       "        <td>5</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>9</td>\n",
       "        <td>2015-05-30</td>\n",
       "        <td>10</td>\n",
       "        <td>30</td>\n",
       "        <td>5</td>\n",
       "        <td>2</td>\n",
       "        <td>2015</td>\n",
       "        <td>Saturday </td>\n",
       "        <td>7</td>\n",
       "        <td>True</td>\n",
       "        <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10</td>\n",
       "        <td>2015-02-04</td>\n",
       "        <td>9</td>\n",
       "        <td>4</td>\n",
       "        <td>2</td>\n",
       "        <td>1</td>\n",
       "        <td>2015</td>\n",
       "        <td>Wednesday</td>\n",
       "        <td>4</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, '2015-09-10', 8, 10, 9, 3, 2015, 'Thursday ', 5, False, True),\n",
       " (2, '2016-08-13', 12, 13, 8, 3, 2016, 'Saturday ', 7, True, False),\n",
       " (3, '2014-02-28', 8, 28, 2, 1, 2014, 'Friday   ', 6, False, True),\n",
       " (4, '2015-11-28', 17, 28, 11, 4, 2015, 'Saturday ', 7, True, False),\n",
       " (5, '2016-03-09', 11, 9, 3, 1, 2016, 'Wednesday', 4, False, True),\n",
       " (6, '2015-04-16', 13, 16, 4, 2, 2015, 'Thursday ', 5, False, True),\n",
       " (7, '2016-09-09', 14, 9, 9, 3, 2016, 'Friday   ', 6, False, True),\n",
       " (8, '2015-04-23', 10, 23, 4, 2, 2015, 'Thursday ', 5, False, True),\n",
       " (9, '2015-05-30', 10, 30, 5, 2, 2015, 'Saturday ', 7, True, False),\n",
       " (10, '2015-02-04', 9, 4, 2, 1, 2015, 'Wednesday', 4, False, True)]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM CreateCaseTime\n",
    "LIMIT 10;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create the 'Close Case Time' Dimension table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n",
      "Done.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DROP TABLE IF EXISTS CloseCaseTime;\n",
    "CREATE TABLE CloseCaseTime (\n",
    "    Close_Date_Key SERIAL,\n",
    "    CloseCase_time TIMESTAMP,\n",
    "    CloseCase_date CHAR(10),\n",
    "    CloseCase_hour INTEGER,\n",
    "    CloseCase_day INTEGER,\n",
    "    CloseCase_month INTEGER,\n",
    "    CloseCase_quarter INTEGER,\n",
    "    CloseCase_year INTEGER,\n",
    "    Close_day_of_week_str CHAR(9),\n",
    "    Close_day_of_week INTEGER,\n",
    "    CloseCase_is_weekend BOOLEAN,\n",
    "    CloseCase_is_weekday BOOLEAN,\n",
    "    PRIMARY KEY (Close_Date_Key)\n",
    ");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "338171 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "INSERT INTO CloseCaseTime (CloseCase_time,CloseCase_date, CloseCase_hour,CloseCase_day,CloseCase_month,CloseCase_quarter,CloseCase_year,\n",
    "    Close_day_of_week_str,Close_day_of_week,CloseCase_is_weekend,CloseCase_is_weekday)\n",
    "SELECT DISTINCT CloseDate AS CloseCase_time,\n",
    "    TO_CHAR(CloseDate, 'YYYY-MM-DD') AS CloseCase_date, \n",
    "    CAST(TO_CHAR(CloseDate, 'YYYY') AS INTEGER) AS CloseCase_year,\n",
    "    CAST(TO_CHAR(CloseDate, 'MM') AS INTEGER) AS CloseCase_month,\n",
    "    CAST(TO_CHAR(CloseDate, 'DD') AS INTEGER) AS CloseCase_date,\n",
    "    CAST(TO_CHAR(CloseDate, 'HH24') AS INTEGER) AS CloseCase_hour,\n",
    "    CAST(TO_CHAR(CloseDate, 'Q') AS INTEGER) AS CloseCase_quarter,\n",
    "    TO_CHAR(CloseDate, 'Day') AS Close_day_of_week_str,\n",
    "    CAST(TO_CHAR(CloseDate, 'D') AS INTEGER) AS Close_day_of_week,\n",
    "    CASE WHEN CAST(TO_CHAR(CloseDate, 'D') AS INTEGER) IN (1, 7) \n",
    "        THEN TRUE\n",
    "        ELSE FALSE\n",
    "    END AS CloseCase_is_weekend,\n",
    "    CASE WHEN CAST(TO_CHAR(CloseDate, 'D') AS INTEGER) NOT IN (1, 7) \n",
    "        THEN TRUE\n",
    "        ELSE FALSE\n",
    "    END AS CloseCase_is_weekday\n",
    "FROM SR;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "ALTER TABLE CloseCaseTime DROP COLUMN Closecase_time;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>close_date_key</th>\n",
       "        <th>closecase_date</th>\n",
       "        <th>closecase_hour</th>\n",
       "        <th>closecase_day</th>\n",
       "        <th>closecase_month</th>\n",
       "        <th>closecase_quarter</th>\n",
       "        <th>closecase_year</th>\n",
       "        <th>close_day_of_week_str</th>\n",
       "        <th>close_day_of_week</th>\n",
       "        <th>closecase_is_weekend</th>\n",
       "        <th>closecase_is_weekday</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>2016-04-21</td>\n",
       "        <td>2016</td>\n",
       "        <td>4</td>\n",
       "        <td>21</td>\n",
       "        <td>11</td>\n",
       "        <td>2</td>\n",
       "        <td>Thursday </td>\n",
       "        <td>5</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>2016-05-10</td>\n",
       "        <td>2016</td>\n",
       "        <td>5</td>\n",
       "        <td>10</td>\n",
       "        <td>13</td>\n",
       "        <td>2</td>\n",
       "        <td>Tuesday  </td>\n",
       "        <td>3</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>2016-08-22</td>\n",
       "        <td>2016</td>\n",
       "        <td>8</td>\n",
       "        <td>22</td>\n",
       "        <td>6</td>\n",
       "        <td>3</td>\n",
       "        <td>Monday   </td>\n",
       "        <td>2</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>2015-05-04</td>\n",
       "        <td>2015</td>\n",
       "        <td>5</td>\n",
       "        <td>4</td>\n",
       "        <td>9</td>\n",
       "        <td>2</td>\n",
       "        <td>Monday   </td>\n",
       "        <td>2</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>2014-04-24</td>\n",
       "        <td>2014</td>\n",
       "        <td>4</td>\n",
       "        <td>24</td>\n",
       "        <td>17</td>\n",
       "        <td>2</td>\n",
       "        <td>Thursday </td>\n",
       "        <td>5</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>6</td>\n",
       "        <td>2016-06-01</td>\n",
       "        <td>2016</td>\n",
       "        <td>6</td>\n",
       "        <td>1</td>\n",
       "        <td>16</td>\n",
       "        <td>2</td>\n",
       "        <td>Wednesday</td>\n",
       "        <td>4</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>7</td>\n",
       "        <td>2014-02-04</td>\n",
       "        <td>2014</td>\n",
       "        <td>2</td>\n",
       "        <td>4</td>\n",
       "        <td>18</td>\n",
       "        <td>1</td>\n",
       "        <td>Tuesday  </td>\n",
       "        <td>3</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>8</td>\n",
       "        <td>2015-10-12</td>\n",
       "        <td>2015</td>\n",
       "        <td>10</td>\n",
       "        <td>12</td>\n",
       "        <td>18</td>\n",
       "        <td>4</td>\n",
       "        <td>Monday   </td>\n",
       "        <td>2</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>9</td>\n",
       "        <td>2016-05-09</td>\n",
       "        <td>2016</td>\n",
       "        <td>5</td>\n",
       "        <td>9</td>\n",
       "        <td>14</td>\n",
       "        <td>2</td>\n",
       "        <td>Monday   </td>\n",
       "        <td>2</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10</td>\n",
       "        <td>2016-07-25</td>\n",
       "        <td>2016</td>\n",
       "        <td>7</td>\n",
       "        <td>25</td>\n",
       "        <td>20</td>\n",
       "        <td>3</td>\n",
       "        <td>Monday   </td>\n",
       "        <td>2</td>\n",
       "        <td>False</td>\n",
       "        <td>True</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, '2016-04-21', 2016, 4, 21, 11, 2, 'Thursday ', 5, False, True),\n",
       " (2, '2016-05-10', 2016, 5, 10, 13, 2, 'Tuesday  ', 3, False, True),\n",
       " (3, '2016-08-22', 2016, 8, 22, 6, 3, 'Monday   ', 2, False, True),\n",
       " (4, '2015-05-04', 2015, 5, 4, 9, 2, 'Monday   ', 2, False, True),\n",
       " (5, '2014-04-24', 2014, 4, 24, 17, 2, 'Thursday ', 5, False, True),\n",
       " (6, '2016-06-01', 2016, 6, 1, 16, 2, 'Wednesday', 4, False, True),\n",
       " (7, '2014-02-04', 2014, 2, 4, 18, 1, 'Tuesday  ', 3, False, True),\n",
       " (8, '2015-10-12', 2015, 10, 12, 18, 4, 'Monday   ', 2, False, True),\n",
       " (9, '2016-05-09', 2016, 5, 9, 14, 2, 'Monday   ', 2, False, True),\n",
       " (10, '2016-07-25', 2016, 7, 25, 20, 3, 'Monday   ', 2, False, True)]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *\n",
    "FROM CloseCaseTime\n",
    "LIMIT 10;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "## Build the Fact Table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done.\n",
      "Done.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DROP TABLE IF EXISTS Fact;\n",
    "CREATE TABLE Fact\n",
    "(\n",
    "    SRID VARCHAR(16) not null,\n",
    "    SRType_key integer,\n",
    "    Dept_key integer,\n",
    "    Method_key integer,\n",
    "    Status_key integer,\n",
    "    Location_key integer,\n",
    "    Create_Date_key integer,\n",
    "    Close_Date_key integer\n",
    "\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>srid</th>\n",
       "        <th>srtype_key</th>\n",
       "        <th>dept_key</th>\n",
       "        <th>method_key</th>\n",
       "        <th>status_key</th>\n",
       "        <th>location_key</th>\n",
       "        <th>create_date_key</th>\n",
       "        <th>close_date_key</th>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "select *\n",
    "from Fact\n",
    "limit 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "384169 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "INSERT INTO Fact (SRID)\n",
    "SELECT SRID\n",
    "FROM SR;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>srid</th>\n",
       "        <th>srtype_key</th>\n",
       "        <th>dept_key</th>\n",
       "        <th>method_key</th>\n",
       "        <th>status_key</th>\n",
       "        <th>location_key</th>\n",
       "        <th>create_date_key</th>\n",
       "        <th>close_date_key</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107769</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00108244</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00108269</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00108062</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107654</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107641</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107655</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107684</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107711</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00275028</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('16-00107769', None, None, None, None, None, None, None),\n",
       " ('16-00108244', None, None, None, None, None, None, None),\n",
       " ('16-00108269', None, None, None, None, None, None, None),\n",
       " ('16-00108062', None, None, None, None, None, None, None),\n",
       " ('16-00107654', None, None, None, None, None, None, None),\n",
       " ('16-00107641', None, None, None, None, None, None, None),\n",
       " ('16-00107655', None, None, None, None, None, None, None),\n",
       " ('16-00107684', None, None, None, None, None, None, None),\n",
       " ('16-00107711', None, None, None, None, None, None, None),\n",
       " ('16-00275028', None, None, None, None, None, None, None)]"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "select *\n",
    "from Fact\n",
    "limit 10"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Insert SRType_key from SRType. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "384168 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "UPDATE \n",
    "  Fact T1 \n",
    "SET\n",
    "  SRType_key = T2.SRType_key\n",
    "FROM SRType T2\n",
    "  INNER JOIN SR T3 ON T2.SRType_Code = T3.SRTypeCode AND T2.SRType_Des = T3.SRdes\n",
    "WHERE \n",
    "  T1.SRID = T3.SRID\n",
    ";"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>srid</th>\n",
       "        <th>srtype_key</th>\n",
       "        <th>dept_key</th>\n",
       "        <th>method_key</th>\n",
       "        <th>status_key</th>\n",
       "        <th>location_key</th>\n",
       "        <th>create_date_key</th>\n",
       "        <th>close_date_key</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00108062</td>\n",
       "        <td>71</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107641</td>\n",
       "        <td>53</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00275028</td>\n",
       "        <td>115</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00108004</td>\n",
       "        <td>71</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00108027</td>\n",
       "        <td>71</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107494</td>\n",
       "        <td>53</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107433</td>\n",
       "        <td>71</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107845</td>\n",
       "        <td>71</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107934</td>\n",
       "        <td>71</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107471</td>\n",
       "        <td>22</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('16-00108062', 71, None, None, None, None, None, None),\n",
       " ('16-00107641', 53, None, None, None, None, None, None),\n",
       " ('16-00275028', 115, None, None, None, None, None, None),\n",
       " ('16-00108004', 71, None, None, None, None, None, None),\n",
       " ('16-00108027', 71, None, None, None, None, None, None),\n",
       " ('16-00107494', 53, None, None, None, None, None, None),\n",
       " ('16-00107433', 71, None, None, None, None, None, None),\n",
       " ('16-00107845', 71, None, None, None, None, None, None),\n",
       " ('16-00107934', 71, None, None, None, None, None, None),\n",
       " ('16-00107471', 22, None, None, None, None, None, None)]"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "select *\n",
    "from Fact\n",
    "limit 10"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Insert Dept_key from Department. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "384169 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "UPDATE \n",
    "  Fact T1 \n",
    "SET\n",
    "  Dept_key = T2.Dept_key\n",
    "FROM Department T2\n",
    "  INNER JOIN SR T3 ON T2.Department_Name = T3.OwningDepart\n",
    "WHERE \n",
    "  T1.SRID = T3.SRID\n",
    ";"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>srid</th>\n",
       "        <th>srtype_key</th>\n",
       "        <th>dept_key</th>\n",
       "        <th>method_key</th>\n",
       "        <th>status_key</th>\n",
       "        <th>location_key</th>\n",
       "        <th>create_date_key</th>\n",
       "        <th>close_date_key</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00076578</td>\n",
       "        <td>51</td>\n",
       "        <td>10</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00076346</td>\n",
       "        <td>51</td>\n",
       "        <td>10</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00076452</td>\n",
       "        <td>51</td>\n",
       "        <td>10</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00079727</td>\n",
       "        <td>60</td>\n",
       "        <td>15</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00076319</td>\n",
       "        <td>103</td>\n",
       "        <td>9</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00079644</td>\n",
       "        <td>103</td>\n",
       "        <td>9</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00076395</td>\n",
       "        <td>124</td>\n",
       "        <td>14</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00079576</td>\n",
       "        <td>106</td>\n",
       "        <td>2</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00079602</td>\n",
       "        <td>103</td>\n",
       "        <td>9</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00079588</td>\n",
       "        <td>103</td>\n",
       "        <td>9</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('14-00076578', 51, 10, None, None, None, None, None),\n",
       " ('14-00076346', 51, 10, None, None, None, None, None),\n",
       " ('14-00076452', 51, 10, None, None, None, None, None),\n",
       " ('14-00079727', 60, 15, None, None, None, None, None),\n",
       " ('14-00076319', 103, 9, None, None, None, None, None),\n",
       " ('14-00079644', 103, 9, None, None, None, None, None),\n",
       " ('14-00076395', 124, 14, None, None, None, None, None),\n",
       " ('14-00079576', 106, 2, None, None, None, None, None),\n",
       " ('14-00079602', 103, 9, None, None, None, None, None),\n",
       " ('14-00079588', 103, 9, None, None, None, None, None)]"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "select *\n",
    "from Fact\n",
    "limit 10"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Insert Method_key from Method. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "384168 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "UPDATE \n",
    "  Fact T1 \n",
    "SET\n",
    "  Method_key = T2.Method_key\n",
    "FROM Method T2\n",
    "  INNER JOIN SR T3 ON T2.Method_Received = T3.MethodReceived\n",
    "WHERE \n",
    "  T1.SRID = T3.SRID\n",
    ";"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>srid</th>\n",
       "        <th>srtype_key</th>\n",
       "        <th>dept_key</th>\n",
       "        <th>method_key</th>\n",
       "        <th>status_key</th>\n",
       "        <th>location_key</th>\n",
       "        <th>create_date_key</th>\n",
       "        <th>close_date_key</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00108062</td>\n",
       "        <td>71</td>\n",
       "        <td>15</td>\n",
       "        <td>17</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00275028</td>\n",
       "        <td>115</td>\n",
       "        <td>10</td>\n",
       "        <td>17</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00108004</td>\n",
       "        <td>71</td>\n",
       "        <td>15</td>\n",
       "        <td>17</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107845</td>\n",
       "        <td>71</td>\n",
       "        <td>15</td>\n",
       "        <td>17</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00107934</td>\n",
       "        <td>71</td>\n",
       "        <td>15</td>\n",
       "        <td>17</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16-00106209</td>\n",
       "        <td>51</td>\n",
       "        <td>10</td>\n",
       "        <td>17</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00248674</td>\n",
       "        <td>106</td>\n",
       "        <td>2</td>\n",
       "        <td>17</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00250395</td>\n",
       "        <td>106</td>\n",
       "        <td>2</td>\n",
       "        <td>17</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00217954</td>\n",
       "        <td>106</td>\n",
       "        <td>2</td>\n",
       "        <td>17</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14-00218221</td>\n",
       "        <td>106</td>\n",
       "        <td>2</td>\n",
       "        <td>17</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "        <td>None</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('16-00108062', 71, 15, 17, None, None, None, None),\n",
       " ('16-00275028', 115, 10, 17, None, None, None, None),\n",
       " ('16-00108004', 71, 15, 17, None, None, None, None),\n",
       " ('16-00107845', 71, 15, 17, None, None, None, None),\n",
       " ('16-00107934', 71, 15, 17, None, None, None, None),\n",
       " ('16-00106209', 51, 10, 17, None, None, None, None),\n",
       " ('14-00248674', 106, 2, 17, None, None, None, None),\n",
       " ('14-00250395', 106, 2, 17, None, None, None, None),\n",
       " ('14-00217954', 106, 2, 17, None, None, None, None),\n",
       " ('14-00218221', 106, 2, 17, None, None, None, None)]"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "select *\n",
    "from Fact\n",
    "limit 10"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Insert Status_key from Status. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "384169 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "UPDATE \n",
    "  Fact T1 \n",
    "SET\n",
    "  Status_key = T2.Status_key\n",
    "FROM Status T2\n",
    "  INNER JOIN SR T3 ON T2.SR_Status = T3.SRStatus\n",
    "WHERE \n",
    "  T1.SRID = T3.SRID\n",
    ";"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Insert Location_key from Location. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "384169 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "UPDATE \n",
    "  Fact T1 \n",
    "SET\n",
    "  Location_key = T2.Location_key\n",
    "FROM Location T2\n",
    "  INNER JOIN SR T3 ON T2.SR_Location = T3.SRLoc AND T2.Street_Name = T3.StreetName AND T2.City = T3.City AND T2.Zipcode = T3.Zipcode AND T2.County = T3.County AND T2.Latitude = T3.Latitude AND T2.Longitude = T3.Longitude AND T2.District = T3.Council\n",
    "WHERE \n",
    "  T1.SRID = T3.SRID\n",
    ";"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Insert Create_Date_Key from Create Case Time. **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "%%sql\n",
    "UPDATE \n",
    "  Fact T1 \n",
    "SET\n",
    "  Create_Date_Key = T2.Create_Date_Key\n",
    "FROM CreateCaseTime T2\n",
    "  INNER JOIN SR T3 ON T2.SR_Location = T3.SRLoc AND T2.Street_Name = T3.StreetName AND T2.City = T3.City AND T2.Zipcode = T3.Zipcode AND T2.County = T3.County AND T2.Latitude = T3.Latitude AND T2.Longitude = T3.Longitude AND T2.District = T3.Council\n",
    "WHERE \n",
    "  T1.SRID = T3.SRID\n",
    ";"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 3 - Analysis (35 points)\n",
    "\n",
    "Explore and analyze your data in its wrangled form. Follow through on the themes you identified in Part 1\n",
    "with queries or scripts that answer the questions you had in mind. Be clear about the answers you discover,\n",
    "discussing them and whether the results match your expectations. Include charts or other visuals that support\n",
    "your analysis. You may use Tableau, ggplot, or other tools we have not covered in class for visualization, but\n",
    "be sure to export images and to include them properly in your writeup."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Below is the link to our Star Schema diagram.**\n",
    "\n",
    "https://www.processon.com/view/link/5825245de4b0fa6ffb9a7584"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "from IPython.display import Image\n",
    "Image(url = \"https://raw.githubusercontent.com/zhianwang/istm-6212/master/Project-02/Pjt2_Star%20Schema%20diagram.JPG\", width=800, height=800)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create the Service Request Type Dimension table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
